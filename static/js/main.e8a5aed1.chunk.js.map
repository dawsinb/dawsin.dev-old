{"version":3,"sources":["utils.js","store.js","components/sections/Section.jsx","components/refractionShaders/backfaceMaterial.js","components/refractionShaders/refractionMaterial.js","components/Refractor.jsx","components/sections/TitleSection.jsx","components/shaders/DistortionMaterial.js","components/DistortionPlane.jsx","components/sections/ContentSection.jsx","components/DynamicText.jsx","components/sections/content/AboutMe.jsx","components/sections/content/CommercialWork.jsx","components/sections/content/Research.jsx","components/sections/content/Euphony.jsx","components/PlaybackButton.jsx","components/SongSelection.jsx","components/sections/content/Music.jsx","components/shaders/TextureFader.jsx","components/Laptop.jsx","components/Phone.jsx","components/Svg.jsx","components/Arrow.jsx","components/Slider.jsx","components/sections/PortfolioSection.jsx","components/sections/EndSection.jsx","components/Background.jsx","App.jsx","components/ScrollHandler.jsx","components/scroll/Square.jsx","components/scroll/Circle.jsx","components/scroll/PositionMarker.jsx","components/scroll/Track.jsx","components/scroll/ScrollOverlay.jsx","index.js"],"names":["seedRandomRange","seed","min","max","lerp","v0","v1","t","useStore","create","set","get","primaryColor","secondaryColor","primaryBright","secondaryBright","marginX","marginY","maxZ","mobileWidth","baseSeed","sections","breakpoints","numSections","scrollPosition","maxScroll","applyScrollDelta","delta","Math","scrollSlice","ParallaxContext","createContext","offset","parallax","Section","index","height","children","props","size","useThree","getState","setState","reduce","sum","totalHeight","slice","position","subgroupRef","useRef","scrollRef","useEffect","subscribe","current","state","useFrame","y","Provider","value","ref","SectionItem","useContext","parentOffset","parentParallax","defaultProps","BackfaceMaterial","vertexShader","fragmentShader","side","BackSide","ShaderMaterial","RefractionMaterial","options","uniforms","envMap","backfaceMap","resolution","Refractor","nodes","useGLTF","gl","scene","camera","model","useMemo","envFbo","WebGLRenderTarget","width","backfaceFbo","texture","backfaceMaterial","refractionMaterial","Vector3","clock","mouse","getElapsedTime","rotateX","rotateY","rotateZ","sin","layers","setRenderTarget","render","material","clearDepth","scale","onUpdate","self","geometry","center","menhir_mini","TitleSection","image","bgText","header","aspect","html","primary","secondary","titlePosition","fontSize","font","FontLoader","parse","BorisBlackBloxxDirty","textRef","useLayoutEffect","computeBoundingBox","parent","x","boundingBox","textGroupRef","rotation","args","color","PI","DistortionMaterial","glslVersion","GLSL3","effectFactor","type","scrollFactor","typoe","mousePosition","Vector2","direction","imageTexture","undefined","displacementTexture","displacementIntensity","distortionIntensity","scrollIntensity","this","v","extend","DistortionPlane","shift","opacity","map","materialRef","prevScrollPosition","useState","setEffectFactor","setMousePosition","scrollDelta","normalize","onPointerMove","e","intersections","uv","onPointerEnter","onPointerOut","attach","Content","styled","highlightColor","ContentSection","alternate","isMobile","colorBright","altColorBright","useLoader","TextureLoader","minFilter","LinearFilter","padding","imageHeight","imageWidth","imageX","imageY","imagePosition","htmlHeight","htmlWidth","htmlPosition","headerPosition","headerFontSize","bgTextPosition","bgTextFontSize","headerFont","Mont_Heavy","bgTextFont","ModeNine","headerRef","bgTextRef","Html","style","zIndexRange","transparent","Container","div","Text","span","DynamicText","containerRef","resize","clientHeight","i","overflow","scrollHeight","clientWidth","scrollWidth","setTimeout","window","addEventListener","AboutMe","CommercialWork","href","Research","Euphony","PlaySvg","PlaybackButton","isPlaying","progress","circumference","radius","strokeDashoffset","playToStop","stopToPlay","beginElement","viewBox","className","stroke","fill","strokeWidth","strokeDasharray","r","cx","cy","id","points","begin","attributeName","dur","to","PlaybackButtonContainer","TextContainer","SongSelection","playback","title","handler","setProgress","requestRef","tick","getPlaybackTime","duration","requestAnimationFrame","cancelAnimationFrame","onClick","MusicContainer","MusicItem","pm836","Playback","okchristmas","kakin","bioluminescence","Promise","all","load","songs","Music","songTracker","forEach","song","setIsPlaying","stop","play","temp","updateIsPlaying","TextureFader","numTextures","prevIndex","imageTextures","noiseTexture","noiseIntensity","displacementOffset","noiseOffset","Laptop","imageIndex","prevImageIndex","imageUrls","displacementUrl","noiseUrl","groupRef","useTexture","flipY","magFilter","NearestFilter","fromArray","mapGltf","node","name","length","Scene","Phone","group","Svg","url","paths","SVGLoader","shapes","flatMap","path","toShapes","shape","data","ArrowSvg","isLeft","Arrow","animated","Marker","Slider","toggle","leftColor","rightColor","markerToggle","useSpring","Number","config","mass","tension","friction","clamp","colorToggle","output","ArrowContainer","ismobile","SliderContainer","PortfolioSection","laptopImages","phoneScale","phonePosition","laptopScale","laptopPosition","setColorToggle","colorSpring","spotLightRef","directionalLightRef","lightTargetRef","target","hovered","setHovered","document","body","cursor","prev","setImageIndex","setDirection","deviceToggle","setDeviceToggle","deviceSpring","laptopRef","phoneRef","cos","z","ambientLight","intensity","directionalLight","angle","EndSection","textPosition","BorisBlackBloxx","fontJp","Yuji_Syuku","nineGeometry","TextGeometry","nineGeometryJp","nineBufferSize","attributes","count","nineBuffer","Float32Array","array","nineBufferJp","setAttribute","BufferAttribute","morphAttributes","fourGeometry","fourGeometryJp","fourBufferSize","fourBuffer","fourBufferJp","nineRef","fourRef","updateMorphTargets","nineHovered","setNineHovered","fourHovered","setFourHovered","nineState","setNineState","fourState","setFourState","time","hoverInfluenceNine","hoverInfluenceFour","morphTargetInfluences","Background","brushSections","seedRandom","brushes","floor","svg","push","brushSection","brush","CanvasContainer","App","linear","orthographic","dpr","far","ScrollHandler","oldBreakpoints","newBreakpoints","a","b","contentsEqual","snapFunction","innerHeight","closeBreakpoint","breakpoint","previousY","timeout","handleWheel","event","deltaY","clearTimeout","handleTouchstart","touches","item","clientY","handleTouchmove","handleTouchend","lenghth","removeEventListener","Square","display","margin","fillOpacity","Circle","scalefactor","PositionMarker","offsetDistance","jumpDirection","startOffset","setScrollPosition","animationRef","animate","prevPosition","rotate","from","MarkerContainer","isStartEnd","setJumpDirection","timeoutRef","prevValue","newValue","sign","Track","textToggles","offsetFactors","Array","_","offsetFactor","ScrollOverlay","ceil","innerWidth","setismobile","bgMaxSize","setToggle","overlaySpringRef","useSpringRef","overlayToggle","bgSpringRef","bgToggle","textSpringRefs","useChain","onMouseEnter","onMouseLeave","LoadingContainer","ReactDOM","fallback","getElementById"],"mappings":"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","file":"static/js/main.e8a5aed1.chunk.js","sourcesContent":["import { seedRandom } from \"seedrandom\"\r\n\r\nexport function contentsEqual(a, b) {\r\n  // check quick indicators of equality first\r\n  if (a == null || b == null) return false\r\n  if (a.length !== b.length) return false\r\n\r\n  // compare all elements, if any mismatch return false\r\n  for (var i = 0; i < a.length; ++i) {\r\n    if (a[i] !== b[i]) return false\r\n  }\r\n  // no mismatches found so return true\r\n  return true\r\n}\r\n\r\nexport function seedRandomRange(seed, min, max) {\r\n  return seed() * (max - min) + min\r\n}\r\n\r\nexport function lerp(v0, v1, t) {\r\n  return v0 * (1 - t) + v1 * t\r\n}\r\n\r\nexport const sampleText = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n  \r\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? \r\n`\r\n","import create from \"zustand\";\r\nimport { sampleText } from \"./utils\";\r\n\r\n// slice to hold global params\r\nconst themeSlice = (set) => ({\r\n  primaryColor: \"#D40749\",\r\n  secondaryColor: \"#2FE8C3\",\r\n  primaryBright: \"#FF005A\",\r\n  secondaryBright: \"#2FE8C3\",\r\n  marginX: 0.1,\r\n  marginY: 0.05\r\n});\r\n// slice to hold global params\r\nconst paramSlice = (set) => ({\r\n  maxZ: 16,\r\n  mobileWidth: 1200,\r\n  baseSeed: 311\r\n});\r\n// slice to hold scroll information\r\nconst scrollSlice = (set, get) => ({\r\n  sections: [],\r\n  breakpoints: [],\r\n  numSections: 8,\r\n  scrollPosition: 0,\r\n  maxScroll: 0,\r\n  applyScrollDelta: (delta) => {\r\n    set({\r\n      scrollPosition: Math.min(\r\n        Math.max(get().scrollPosition + delta, 0),\r\n        get().maxScroll\r\n      )\r\n    });\r\n  }\r\n});\r\n\r\nconst useStore = create((set, get) => ({\r\n  ...themeSlice(set),\r\n  ...paramSlice(set),\r\n  ...scrollSlice(set, get)\r\n}));\r\n\r\nexport { useStore };\r\n","import React, { createContext, useRef, useContext, useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useFrame, useThree } from \"@react-three/fiber\"\r\nimport { lerp } from \"../../utils\"\r\nimport { useStore } from \"../../store\"\r\n\r\n/**\r\n * TODO: add desc\r\n */\r\nconst ParallaxContext = createContext({ offset: 0, parallax: 1 })\r\n\r\n/**\r\n * TODO: add desc\r\n */\r\nfunction Section({ index, height, parallax, children, ...props }) {\r\n  const { size } = useThree()\r\n\r\n  // retrieve sections and update\r\n  const sections = useStore.getState().sections\r\n  sections[index] = (height / 100) * size.height\r\n  useStore.setState({ sections: [...sections] })\r\n  useStore.setState({ maxScroll: sections.reduce((sum, height) => sum + height, 0) - size.height })\r\n\r\n  // calculate total height up to this section\r\n  const totalHeight = sections.slice(0, index).reduce((sum, height) => (sum += height), 0)\r\n  // calculate position (adjust for parallax factor)\r\n  const position = -totalHeight * parallax\r\n  // record breakpoint\r\n  const breakpoints = useStore.getState().breakpoints\r\n  breakpoints[index] = totalHeight\r\n  useStore.setState({ breakpoints: [...breakpoints] })\r\n\r\n  // set up a ref to the sub group so that we can scroll it relative to the position\r\n  const subgroupRef = useRef()\r\n  // set up transient subscription to the scroll position\r\n  const scrollRef = useRef(useStore.getState().scrollPosition)\r\n  useEffect(\r\n    () =>\r\n      useStore.subscribe(\r\n        (scrollPosition) => (scrollRef.current = scrollPosition),\r\n        (state) => state.scrollPosition\r\n      ),\r\n    []\r\n  )\r\n  // lerp y position to scroll position (adjusted for parallax) for a smooth scroll effect\r\n  useFrame(() => {\r\n    subgroupRef.current.position.y = lerp(subgroupRef.current.position.y, scrollRef.current * parallax, 0.07)\r\n  })\r\n\r\n  return (\r\n    <ParallaxContext.Provider value={{ offset: position, parallax: parallax }}>\r\n      <group position={[0, position, 0]} {...props}>\r\n        <group ref={subgroupRef}>{children}</group>\r\n      </group>\r\n    </ParallaxContext.Provider>\r\n  )\r\n}\r\n// define props\r\nSection.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  height: PropTypes.number,\r\n  parallax: PropTypes.number\r\n}\r\nSection.defaultProps = {\r\n  height: 100,\r\n  parallax: 0\r\n}\r\n\r\n/**\r\n * TODO: add Desc\r\n *\r\n */\r\nfunction SectionItem({ parallax, children }) {\r\n  // calculate position from offset and parallax factor\r\n  const { offset: parentOffset, parallax: parentParallax } = useContext(ParallaxContext)\r\n  const position = parentOffset * parallax\r\n\r\n  // set up a ref to the sub group so that we can scroll it relative to the position\r\n  const subgroupRef = useRef()\r\n  // set up transient subscription to the scroll position\r\n  const scrollRef = useRef(useStore.getState().scrollPosition)\r\n  useEffect(\r\n    () =>\r\n      useStore.subscribe(\r\n        (scrollPosition) => (scrollRef.current = scrollPosition),\r\n        (state) => state.scrollPosition\r\n      ),\r\n    []\r\n  )\r\n  // lerp y position to scroll position (adjusted for parallax) for a smooth scroll effect\r\n  useFrame(() => {\r\n    subgroupRef.current.position.y = lerp(subgroupRef.current.position.y, scrollRef.current * parallax * parentParallax, 0.1)\r\n  })\r\n\r\n  return (\r\n    <group position={[0, position, 0]}>\r\n      <group ref={subgroupRef}>{children}</group>\r\n    </group>\r\n  )\r\n}\r\n// define props\r\nSectionItem.propTypes = {\r\n  parallax: PropTypes.number\r\n}\r\nSectionItem.defaultProps = {\r\n  parallax: 1\r\n}\r\n\r\nexport { Section, SectionItem }\r\n","import { ShaderMaterial, BackSide } from \"three\"\r\n\r\nclass BackfaceMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      vertexShader: `varying vec3 worldNormal;\r\n      void main() {\r\n        vec4 transformedNormal = vec4(normal, 0.);\r\n        vec4 transformedPosition = vec4(position, 1.0);\r\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\r\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\r\n      }`,\r\n      fragmentShader: `varying vec3 worldNormal;\r\n      void main() {\r\n        gl_FragColor = vec4(worldNormal, 1.0);\r\n      }`,\r\n      side: BackSide\r\n    })\r\n  }\r\n}\r\n\r\nexport { BackfaceMaterial }\r\n","import { ShaderMaterial } from \"three\";\r\n\r\nclass RefractionMaterial extends ShaderMaterial {\r\n  constructor(options) {\r\n    super({\r\n      vertexShader: `\r\n      varying vec3 worldNormal;\r\n      varying vec3 viewDirection;\r\n      void main() {\r\n        vec4 transformedNormal = vec4(normal, 0.0);\r\n        vec4 transformedPosition = vec4(position, 1.0);\r\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\r\n        viewDirection = normalize((modelMatrix * transformedPosition).xyz - cameraPosition);;\r\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\r\n      }`,\r\n      fragmentShader: `\r\n      uniform sampler2D envMap;\r\n      uniform sampler2D backfaceMap;\r\n      uniform vec2 resolution;\r\n\r\n      varying vec3 worldNormal;\r\n      varying vec3 viewDirection;\r\n\r\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\r\n        return pow(1.05 + dot(viewDirection, worldNormal), 300.0);\r\n      }\r\n      void main() {\r\n        vec2 uv = gl_FragCoord.xy / resolution;\r\n          \r\n        vec3 normal = worldNormal * (1.0 - 0.7) - texture2D(backfaceMap, uv).rgb * 0.7;\r\n        \r\n        vec4 color = texture2D(envMap, uv += refract(viewDirection, normal, 1.0/1.5).xy);\r\n        gl_FragColor = vec4(mix(color.rgb, vec3(0.0), fresnelFunc(viewDirection, normal)), 1.0);\r\n      }`,\r\n      uniforms: {\r\n        envMap: { value: options.envMap },\r\n        backfaceMap: { value: options.backfaceMap },\r\n        resolution: { value: options.resolution }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { RefractionMaterial };\r\n","import React, { useMemo, useRef, useLayoutEffect } from \"react\"\r\nimport { Vector3 } from \"three\"\r\nimport { useThree, useFrame } from \"@react-three/fiber\"\r\nimport { useGLTF } from \"@react-three/drei\"\r\nimport { WebGLRenderTarget } from \"three\"\r\nimport { BackfaceMaterial } from \"./refractionShaders/backfaceMaterial\"\r\nimport { RefractionMaterial } from \"./refractionShaders/refractionMaterial\"\r\n\r\nfunction Refractor() {\r\n  const { nodes } = useGLTF(\"/models/rock.gltf\")\r\n  const { size, gl, scene, camera } = useThree()\r\n  const model = useRef()\r\n\r\n  // Create Fbo's and materials\r\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\r\n    const envFbo = new WebGLRenderTarget(size.width, size.height)\r\n    const backfaceFbo = new WebGLRenderTarget(size.width, size.height)\r\n    const backfaceMaterial = new BackfaceMaterial()\r\n    const refractionMaterial = new RefractionMaterial({ envMap: envFbo.texture, backfaceMap: backfaceFbo.texture, resolution: [size.width * 2, size.height * 2] })\r\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\r\n  }, [size])\r\n\r\n  // Render-loop\r\n  const rotationAxis = new Vector3()\r\n  useFrame(({ clock, mouse }) => {\r\n    const t = clock.getElapsedTime()\r\n\r\n    model.current.rotateX(0.006)\r\n    model.current.rotateY(0.004)\r\n    model.current.rotateZ(0.005 * Math.sin(clock.getElapsedTime() / 2))\r\n    \r\n    // Render env to fbo\r\n    camera.layers.set(1)\r\n    gl.setRenderTarget(envFbo)\r\n    gl.render(scene, camera)\r\n    // Render cube backfaces to fbo\r\n    camera.layers.set(0)\r\n    model.current.material = backfaceMaterial\r\n    gl.setRenderTarget(backfaceFbo)\r\n    gl.clearDepth()\r\n    gl.render(scene, camera)\r\n  \r\n    // Render env to screen\r\n    camera.layers.set(1)\r\n    gl.setRenderTarget(null)\r\n    gl.render(scene, camera)\r\n    gl.clearDepth()\r\n    // Render cube with refraction material to screen\r\n    camera.layers.set(0)\r\n    model.current.material = refractionMaterial\r\n    gl.render(scene, camera)\r\n  }, 1)\r\n\r\n  const center = (self) => self.geometry.center()\r\n\r\n  const scale = Math.max(size.width, size.height) / 2\r\n  return (\r\n    <mesh\r\n      onUpdate={center}\r\n      ref={model}\r\n      geometry={nodes.menhir_mini.geometry}\r\n      position={[0, 0, 100]}\r\n      scale={scale}\r\n    >\r\n      <meshBasicMaterial />\r\n    </mesh>\r\n\r\n  )\r\n}\r\n\r\nexport { Refractor }\r\n","import React, { useLayoutEffect, useRef } from \"react\"\r\nimport { FontLoader } from \"three\"\r\nimport { useThree, useFrame } from \"@react-three/fiber\"\r\nimport { useStore } from \"../../store\"\r\nimport { Section, SectionItem } from \"./Section\"\r\nimport { Html } from \"@react-three/drei\"\r\nimport { Refractor } from \"../Refractor\"\r\nimport { lerp } from \"../../utils\"\r\nimport BorisBlackBloxxDirty from \"../../fonts/BorisBlackBloxxDirty.json\"\r\n\r\nfunction TitleSection({ index, parallax, image, bgText, header, aspect, html }) {\r\n  const isMobile = false\r\n\r\n  // calculate base width and height\r\n  const { size } = useThree()\r\n  const marginX = useStore((state) => state.marginX)\r\n  const width = size.width * (1 - marginX)\r\n  const marginY = useStore((state) => state.marginY)\r\n  const height = size.height * (1 - marginY)\r\n\r\n  // adjust section height based on if mobile layout is used\r\n  const sectionHeight = 100\r\n\r\n  // get colors\r\n  const primary = useStore((state) => state.primaryColor)\r\n  const secondary = useStore((state) => state.secondaryColor)\r\n\r\n  /* Calculate Positions / sizes */\r\n\r\n  const titleX = 0\r\n  const titleY = 0\r\n  const titlePosition = [titleX, titleY, 1]\r\n  const fontSize = width / 10\r\n\r\n  const htmlX = -width / 2\r\n  const htmlY = -height / 4\r\n  const htmlPosition = [htmlX, htmlY, 10]\r\n\r\n  const font = new FontLoader().parse(BorisBlackBloxxDirty)\r\n\r\n  const textRef = useRef()\r\n  useLayoutEffect(() => {\r\n    textRef.current.geometry.computeBoundingBox()\r\n    textRef.current.parent.position.x = (textRef.current.geometry.boundingBox.min.x - textRef.current.geometry.boundingBox.max.x) / 2\r\n  }, [size])\r\n\r\n  const textGroupRef = useRef()\r\n  \r\n  useFrame(({mouse}) => {\r\n    textGroupRef.current.rotation.x = lerp(textGroupRef.current.rotation.x, -mouse.y / 1.5, 0.01)\r\n    textGroupRef.current.rotation.y = lerp(textGroupRef.current.rotation.y, mouse.x / 1.5, 0.01)\r\n  })\r\n\r\n  return (\r\n    <Section index={index} parallax={parallax} height={sectionHeight}>\r\n      <SectionItem parallax={2}>\r\n        <group ref={textGroupRef}>\r\n          <group position={titlePosition}>\r\n            <mesh ref={textRef} layers={1}>\r\n              <textGeometry args={[\"dawsin\", {font: font, size: fontSize, height: 1}]}/>\r\n              <meshBasicMaterial color={primary} />\r\n            </mesh>\r\n\r\n            <mesh layers={1} position={[0, -fontSize / 1.5, 0.1]}>\r\n              <textGeometry args={[\".dev\", {font: font, size: fontSize, height: 1}]}/>\r\n              <meshBasicMaterial color={secondary} />\r\n            </mesh>\r\n          </group>\r\n        </group>\r\n      </SectionItem>\r\n\r\n      <SectionItem parallax={4}>\r\n        <mesh rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]}>\r\n          <planeGeometry args={[width * 3, height * 2, 32, 32]} />\r\n          <meshBasicMaterial color={\"#000\"} />\r\n        </mesh>\r\n      </SectionItem>\r\n\r\n      <SectionItem parallax={20}>\r\n        <Refractor />\r\n      </SectionItem>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport { TitleSection }\r\n\r\n\r\n// <Text layers={1} font={\"../../fonts/BorisBlackBloxxDirty.ttf\"} fontSize={fontSize} color={primary} anchorX={\"0%\"} anchorY={\"100%\"}>\r\n//   dawsin\r\n// </Text>\r\n// <Text layers={1} font={\"../../fonts/BorisBlackBloxxDirty.ttf\"} fontSize={fontSize} color={secondary} anchorX={\"0%\"} anchorY={\"75%\"}>\r\n//   .dev\r\n// </Text>","import { ShaderMaterial, Vector2, GLSL3 } from \"three\"\r\nimport { extend } from \"@react-three/fiber\"\r\n\r\nclass DistortionMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      glslVersion: GLSL3,\r\n      uniforms: {\r\n        effectFactor: { type: \"f\", value: 0 },\r\n        scrollFactor: { typoe: \"f\", value: 0 },\r\n        mousePosition: { type: \"v2\", value: new Vector2(0, 0) },\r\n        direction: { type: \"v2\", value: new Vector2(0, 0) },\r\n        imageTexture: { type: \"t\", value: undefined },\r\n        displacementTexture: { type: \"t\", value: undefined },\r\n        displacementIntensity: { type: \"f\", value: 10.0 },\r\n        distortionIntensity: { type: \"f\", value: 0.1 },\r\n        scrollIntensity: { type: \"f\", value: 1.0 }\r\n      },\r\n      vertexShader: /* glsl */ `\r\n        uniform vec2 mousePosition;\r\n        uniform float effectFactor;\r\n        uniform float displacementIntensity;\r\n        \r\n        varying vec2 vUv;\r\n        varying float distanceFactor;\r\n\r\n        void main() {\r\n          vUv = uv;\r\n\r\n          distanceFactor = pow(cos(distance(mousePosition, uv) * 3.14159265) / 2.0 + 0.5, 10.0);\r\n          distanceFactor = distanceFactor * effectFactor;\r\n\r\n          vec3 pos = position;\r\n          if (uv.y > 0.5) {\r\n            pos.y = pos.y + (distanceFactor * displacementIntensity);\r\n          }\r\n          else {\r\n            pos.y = pos.y - (distanceFactor * displacementIntensity);\r\n          }\r\n          if (uv.x > 0.5) {\r\n            pos.x = pos.x + (distanceFactor * displacementIntensity);\r\n          }\r\n          else {\r\n            pos.x = pos.x - (distanceFactor * displacementIntensity);\r\n          }\r\n          \r\n\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( pos , 1.0 );\r\n        \r\n        }`,\r\n      fragmentShader: /* glsl */ `\r\n        uniform float effectFactor;\r\n        uniform float scrollFactor;\r\n        uniform vec2 mousePosition;\r\n        uniform vec2 direction;\r\n        uniform sampler2D imageTexture;\r\n        uniform float distortionIntensity;\r\n        uniform float scrollIntensity;\r\n\r\n        varying vec2 vUv;\r\n        varying float distanceFactor;\r\n        out vec4 fragColor;\r\n\r\n        void main() {\r\n          // get uv from the vertex shaders\r\n          vec2 uv = vUv;\r\n\r\n          // calculate distortion\r\n          float distortion = distanceFactor * distortionIntensity;\r\n          \r\n          // claculate uv's from displacement and direction\r\n          vec2 uvR = uv + (distortion * direction);\r\n          vec2 uvG = uv;\r\n          vec2 uvB = uv - (distortion * direction);\r\n          // add scroll offset to uvs\r\n          uvR.y = uvR.y + (scrollFactor * scrollIntensity);\r\n          uvB.y = uvB.y - (scrollFactor * scrollIntensity);\r\n\r\n          // get prev and current image based on indicies\r\n          float imageR = texture2D(imageTexture, uvR).r;\r\n          float imageG = texture2D(imageTexture, uvG).g;\r\n          float imageB = texture2D(imageTexture, uvB).b;\r\n\r\n          // mix prev and current image based on effectFactor\r\n          vec4 finalTexture = vec4(imageR, imageG, imageB, 1.0);\r\n          // apply noise to final texture\r\n          fragColor = finalTexture;\r\n        }`\r\n    })\r\n  }\r\n\r\n  get effectFactor() {\r\n    return this.uniforms.effectFactor.value\r\n  }\r\n  set effectFactor(v) {\r\n    this.uniforms.effectFactor.value = v\r\n  }\r\n  get scrollFactor() {\r\n    return this.uniforms.scrollFactor.value\r\n  }\r\n  set scrollFactor(v) {\r\n    this.uniforms.scrollFactor.value = v\r\n  }\r\n  get mousePosition() {\r\n    return this.uniforms.mousePosition.value\r\n  }\r\n  set mousePosition(v) {\r\n    this.uniforms.mousePosition.value = v\r\n  }\r\n  get direction() {\r\n    return this.uniforms.direction.value\r\n  }\r\n  set direction(v) {\r\n    this.uniforms.direction.value = v\r\n  }\r\n  get imageTexture() {\r\n    return this.uniforms.imageTexture.value\r\n  }\r\n  set imageTexture(v) {\r\n    this.uniforms.imageTexture.value = v\r\n  }\r\n  get displacementTexture() {\r\n    return this.uniforms.displacementTexture.value\r\n  }\r\n  set displacementTexture(v) {\r\n    this.uniforms.displacementTexture.value = v\r\n  }\r\n  get displacementIntensity() {\r\n    return this.uniforms.displacementIntensity.value\r\n  }\r\n  set displacementIntensity(v) {\r\n    this.uniforms.displacementIntensity.value = v\r\n  }\r\n  get distortionIntensity() {\r\n    return this.uniforms.distortionIntensity.value\r\n  }\r\n  set distortionIntensity(v) {\r\n    this.uniforms.distortionIntensity.value = v\r\n  }\r\n  get scrollIntensity() {\r\n    return this.uniforms.scrollIntensity.value\r\n  }\r\n  set scrollIntensity(v) {\r\n    this.uniforms.scrollIntensity.value = v\r\n  }\r\n}\r\n\r\n// register element in r3f\r\nextend({ DistortionMaterial })\r\n","import React, { forwardRef, useRef, useEffect, useState } from \"react\";\r\nimport { Vector2 } from \"three\";\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { lerp } from \"../utils\";\r\nimport \"./shaders/DistortionMaterial\";\r\nimport { useStore } from \"../store\";\r\n\r\nfunction DistortionPlane({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }) {\r\n  const materialRef = useRef();\r\n\r\n  // set up transient subscription to the scroll position\r\n  const scrollRef = useRef(useStore.getState().scrollPosition);\r\n  useEffect(\r\n    () =>\r\n      useStore.subscribe(\r\n        (scrollPosition) => (scrollRef.current = scrollPosition),\r\n        (state) => state.scrollPosition\r\n      ),\r\n    []\r\n  );\r\n  // var to hold previous scroll position to calculate delta\r\n  let prevScrollPosition = scrollRef.current;\r\n\r\n  // set up animation loop for distoration effect\r\n  const { size } = useThree();\r\n  const [effectFactor, setEffectFactor] = useState(0)\r\n  const [mousePosition, setMousePosition] = useState(new Vector2(0.5, 0.5))\r\n  \r\n  useFrame(({mouse}) => {\r\n    const scrollDelta = (scrollRef.current - prevScrollPosition) / size.height;\r\n\r\n    // lerp direction to the direction of the mouse\r\n    materialRef.current.direction.lerp(mouse.normalize(), 0.01).normalize()\r\n    materialRef.current.mousePosition.lerp(mousePosition, 0.03)\r\n    // lerp towards current effect factor\r\n    materialRef.current.effectFactor = lerp(materialRef.current.effectFactor, effectFactor, 0.01)\r\n\r\n    // lerp shift value to the delta of the scroll position\r\n    materialRef.current.scrollFactor = lerp(materialRef.current.scrollFactor, scrollDelta, 0.025);\r\n    // update previous scroll position\r\n    prevScrollPosition = scrollRef.current;\r\n  });\r\n\r\n  return (\r\n    <mesh \r\n      {...props}\r\n      onPointerMove={(e) => setMousePosition(e.intersections[0].uv)}\r\n      onPointerEnter={() => setEffectFactor(1)}\r\n      onPointerOut={() => setEffectFactor(0)}\r\n    >\r\n      <planeBufferGeometry args={args} />\r\n      <distortionMaterial\r\n        attach=\"material\"\r\n        ref={materialRef}\r\n        imageTexture={map} \r\n        scrollIntensity={5.0}\r\n        displacementIntensity={20.0}\r\n      />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport { DistortionPlane };\r\n","import React, { useMemo, useLayoutEffect, useRef } from \"react\";\r\nimport { useThree, useLoader } from \"@react-three/fiber\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"../../store\";\r\nimport { Section, SectionItem } from \"./Section\";\r\nimport { Html, Text } from \"@react-three/drei\";\r\nimport { DistortionPlane } from \"../DistortionPlane\";\r\nimport { FontLoader, TextureLoader, LinearFilter } from \"three\";\r\nimport ModeNine from \"../../fonts/ModeNine.json\"\r\nimport Mont_Heavy from \"../../fonts/Mont_Heavy.json\"\r\n\r\nconst Content = styled(\"div\")`\r\n  width: 100%;\r\n  height: 100%;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  span {\r\n    ::selection {\r\n      background-color: ${(props) => props.highlightColor};\r\n    }\r\n  }\r\n  br {\r\n    ::selection {\r\n      background-color: ${(props) => props.highlightColor};\r\n    }\r\n  }\r\n  i {\r\n    ::selection {\r\n      background-color: ${(props) => props.highlightColor};\r\n    }\r\n  }\r\n  em {\r\n    color: ${(props) => props.color};\r\n    ::selection {\r\n      background-color: ${(props) => props.highlightColor};\r\n    }\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: ${(props) => props.color};\r\n    ::selection {\r\n      background-color: ${(props) => props.highlightColor};\r\n    }\r\n  }\r\n  button {\r\n    background-color: transparent;\r\n    border: none;\r\n    opacity: 1;\r\n    font-size: inherit;\r\n    padding: 0;\r\n    margin: 0;\r\n    cursor: pointer;\r\n    color: ${(props) => props.color};\r\n    ::selection {\r\n      background-color: ${(props) => props.highlightColor};\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ContentSection({ index, alternate, image, bgText, header, children }) {\r\n  const { size } = useThree();\r\n\r\n  // use mobile layout if vertical orientation\r\n  const isMobile = size.width < size.height;\r\n\r\n  // calculate base width and height\r\n  const marginX = useStore((state) => state.marginX);\r\n  const width = size.width * (1 - marginX);\r\n  const marginY = useStore((state) => state.marginY);\r\n  const height = size.height * (1 - marginY);\r\n\r\n  // alternate colors\r\n  const primary = useStore((state) => state.primaryColor);\r\n  const secondary = useStore((state) => state.secondaryColor);\r\n  const primaryBright = useStore((state) => state.primaryBright);\r\n  const secondaryBright = useStore((state) => state.secondaryBright);\r\n  const color = alternate ? primary : secondary;\r\n  const colorBright = alternate ? primaryBright : secondaryBright;\r\n  const altColorBright = alternate ? secondaryBright : primaryBright;\r\n\r\n  // load image\r\n  const imageTexture = useLoader(TextureLoader, image);\r\n  useMemo(() => (imageTexture.minFilter = LinearFilter), [imageTexture]);\r\n\r\n  /* Calculate Positions / sizes */\r\n\r\n  // padding between image and html\r\n  const padding = isMobile ? height * 0.02 : width * 0.03;\r\n\r\n  // calculate image width/height\r\n  const imageHeight = isMobile ? height * 0.3 : height * 0.7;\r\n  const imageWidth = isMobile ? width : width / 1.8;\r\n  // calculate image position\r\n  const imageX = isMobile\r\n    ? 0\r\n    : (width / 2 - imageWidth / 2) * (alternate ? -1 : 1);\r\n  const imageY = isMobile ? height / 4 : -height * 0.05;\r\n  const imagePosition = [imageX, imageY, 1];\r\n\r\n  // calculate html width/height\r\n  const htmlHeight = isMobile ? (height - imageHeight) * 0.75 : imageHeight;\r\n  const htmlWidth = isMobile ? width : width - imageWidth - padding;\r\n  // calculate image position (uses top-left coords instead of centered)\r\n  const htmlX =\r\n    isMobile || !alternate ? -width / 2 : imageX + imageWidth / 2 + padding;\r\n  const htmlY = isMobile\r\n    ? imageY - imageHeight / 2 - padding\r\n    : imageY + imageHeight / 2;\r\n  const htmlPosition = [htmlX, htmlY, 10];\r\n\r\n  // calculate header position\r\n  const headerX = (width / 2) * (alternate ? -1 : 1);\r\n  const headerY = imageHeight / 2 + imageY + padding;\r\n  const headerPosition = [headerX, headerY, -1];\r\n  const headerFontSize = isMobile ? width / 20 : width / 25;\r\n\r\n  // calculate bg text position\r\n  const bgTextX = (width / 2) * (alternate ? 1 : -1);\r\n  const bgTextY = isMobile ? height / 2.2 : height / 4;\r\n  const bgTextPosition = [bgTextX, bgTextY, -10];\r\n  const bgTextFontSize = width / 10;\r\n\r\n  const headerFont = new FontLoader().parse(Mont_Heavy)\r\n  const bgTextFont = new FontLoader().parse(ModeNine)\r\n\r\n  // right align header or alternate text if needed\r\n  const headerRef = useRef()\r\n  const bgTextRef = useRef()\r\n  useLayoutEffect(() => {\r\n    if (!alternate) {\r\n      headerRef.current.geometry.computeBoundingBox()\r\n      headerRef.current.parent.position.x = headerRef.current.geometry.boundingBox.min.x - headerRef.current.geometry.boundingBox.max.x\r\n    }\r\n    else {\r\n      bgTextRef.current.geometry.computeBoundingBox()\r\n      bgTextRef.current.parent.position.x = bgTextRef.current.geometry.boundingBox.min.x - bgTextRef.current.geometry.boundingBox.max.x\r\n    }\r\n  }, [size])\r\n\r\n  return (\r\n    <Section\r\n      index={index}\r\n      parallax={1 + (isMobile || !alternate ? 0 : 0.5)}\r\n      height={100}\r\n    >\r\n      {/* html content*/}\r\n      <SectionItem parallax={0}>\r\n        <Html\r\n          style={{ width: htmlWidth, height: htmlHeight }}\r\n          position={htmlPosition}\r\n          zIndexRange={[0, 0]}\r\n        >\r\n          <Content color={colorBright} highlightColor={altColorBright}>\r\n            {children}\r\n          </Content>\r\n        </Html>\r\n      </SectionItem>\r\n\r\n      {/* image */}\r\n      <SectionItem parallax={0}>\r\n        <DistortionPlane\r\n          map={imageTexture}\r\n          args={[imageWidth, imageHeight, 32, 32]}\r\n          position={imagePosition}\r\n          shift={75}\r\n        />\r\n      </SectionItem>\r\n\r\n      {/* header */}\r\n      <SectionItem parallax={1.0}>\r\n        <group>\r\n          <mesh ref={headerRef} position={headerPosition}>\r\n            <textGeometry args={[header, {font: headerFont, size: headerFontSize, height: 1}]} />\r\n            <meshBasicMaterial color={color} />\r\n          </mesh>\r\n        </group>\r\n        \r\n      </SectionItem>\r\n\r\n      {/* bg text */}\r\n      <SectionItem parallax={-2.0}>\r\n        <group>\r\n          <mesh ref={bgTextRef} position={bgTextPosition}>\r\n            <textGeometry args={[bgText, {font: bgTextFont, size: bgTextFontSize, height: 1}]}/>\r\n            <meshBasicMaterial transparent color={\"#ffffff\"}  opacity={0.04} />\r\n          </mesh>\r\n        </group>\r\n      </SectionItem>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport { ContentSection };\r\n","import React, { useRef, useLayoutEffect, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// create container and section div styles to handle scroll snapping\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst Text = styled.span`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: block;\r\n  font-size: 1px;\r\n`;\r\n\r\nfunction DynamicText({ children, ...props }) {\r\n  const containerRef = useRef();\r\n  const textRef = useRef();\r\n\r\n  const resize = () => {\r\n    // only run if div is loaded\r\n    if (containerRef.current.clientHeight !== 0) {\r\n      let i = 1;\r\n      let overflow = false;\r\n      // increase size until text overflows\r\n      while (!overflow) {\r\n        textRef.current.style.fontSize = `${i}px`;\r\n        overflow =\r\n          containerRef.current.clientHeight <\r\n            containerRef.current.scrollHeight ||\r\n          containerRef.current.clientWidth < containerRef.current.scrollWidth;\r\n        if (!overflow) {\r\n          i = i + 0.5;\r\n        }\r\n      }\r\n\r\n      // revert to last state where no overflow happened:\r\n      textRef.current.style.fontSize = `${i - 0.5}px`;\r\n    }\r\n    // retry in 100 ms if div isnt loaded\r\n    else {\r\n      setTimeout(resize, 100);\r\n    }\r\n  };\r\n\r\n  // TODO: resize text when width or height of container changes\r\n  useLayoutEffect(resize, []);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      resize();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Container ref={containerRef}>\r\n      <Text ref={textRef} {...props}>\r\n        {children}\r\n      </Text>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { DynamicText };\r\n","import { DynamicText } from \"../../DynamicText\";\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <DynamicText>\r\n      Hello, as you may have guessed from the name of the site, my name is{\" \"}\r\n      <em>Dawsin</em>. I’m a programmer and artist with a passion for the\r\n      combination of these two fields.\r\n      <br />\r\n      <br />\r\n      My work has primarily been in <em>web development</em>, making both\r\n      traditional sites and gpu accelerated 3D sites like this one. As well as\r\n      some video game programming.\r\n      <br />\r\n      <br />\r\n      But that’s not to say I’m only interested in these areas, I’m always\r\n      looking to push the envelope in new ways.\r\n    </DynamicText>\r\n  );\r\n}\r\n\r\nexport { AboutMe };\r\n","import { DynamicText } from \"../../DynamicText\";\r\n\r\nfunction CommercialWork() {\r\n  return (\r\n    <DynamicText>\r\n      I'm available for freelance/contract work or also permanent positions at\r\n      the moment. Feel free to contact me at{\" \"}\r\n      <a href=\"mailto:dawsinb@gmail.com\">dawsinb@gmail.com</a> if you are\r\n      interested, or if you have any questions.\r\n      <br />\r\n      <br />\r\n      Primarily, I am most experienced with web or game development but am\r\n      always open to any interesting opportunities. For web development I can do\r\n      both more traditional sites, or fancy gpu accelerated ones like this one.\r\n      <br />\r\n      <br />\r\n      See the next section for some examples of my work.\r\n    </DynamicText>\r\n  );\r\n}\r\n\r\nexport { CommercialWork };\r\n","import { DynamicText } from \"../../DynamicText\";\r\n\r\nfunction Research() {\r\n  return (\r\n    <DynamicText>\r\n      When I was in university I originally planned on going into the field of{\" \"}\r\n      <em>machine learning</em>\r\n      . My focus has since shifted towards design, but I am still very\r\n      interested in the usage of machine learning, particularly for artistic\r\n      pursuits.\r\n      <br />\r\n      <br />\r\n      Here are the links to the two papers I worked on if you are interested:\r\n      <br />\r\n      <br />-{\" \"}\r\n      <a href=\"https://arxiv.org/abs/2006.12463\">\r\n        Slimming Neural Networks using Adaptive Connectivity Scores\r\n      </a>\r\n      <br />\r\n      <br />-{\" \"}\r\n      <a href=\"https://arxiv.org/abs/2006.12617\">\r\n        Adaptive County Level COVID-19 Forecast Models: Analysis and Improvement\r\n      </a>\r\n    </DynamicText>\r\n  );\r\n}\r\n\r\nexport { Research };\r\n","import { DynamicText } from \"../../DynamicText\";\r\n\r\nfunction Euphony() {\r\n  return (\r\n    <DynamicText>\r\n      Combining programming, design, and music, one of my interests is the\r\n      creation of audio visualizers. As such I decided to develop a library\r\n      called <em>euphony</em> to help me and anyone else create visualizers on\r\n      the web.\r\n      <br />\r\n      <br />\r\n      Euphony is a library which allows for easy playback and analysis of audio\r\n      files. You can use it with any animation library or even plain Javascript.\r\n      It's open source and written entirely in Typescript. And it is also\r\n      lightweight with zero dependencies.\r\n      <br />\r\n      <br />\r\n      If you are interested check out the project on{\" \"}\r\n      <a href=\"https://arxiv.org/abs/2006.12463\">Github</a> or{\" \"}\r\n      <a href=\"https://arxiv.org/abs/2006.12463\">NPM</a>.\r\n    </DynamicText>\r\n  );\r\n}\r\n\r\nexport { Euphony };\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlaySvg = styled(\"svg\")`\r\n  transform: scale(${(props) => props.scale});\r\n  .ring {\r\n    transition: stroke-dashoffset 0.35s;\r\n    transform-origin: 50% 50%;\r\n    transform: rotate(-90deg);\r\n  }\r\n  .icon {\r\n    transform: scale(0.4);\r\n    transform-origin: 50% 50%;\r\n    transition: transform 200ms ease-out;\r\n  }\r\n  :hover {\r\n    .icon {\r\n      transform: scale(0.45);\r\n    }\r\n  }\r\n`;\r\n\r\nfunction PlaybackButton({ scale, color, isPlaying, progress }) {\r\n  const radius = 50;\r\n  const stroke = 4;\r\n\r\n  const circumference = radius * 2 * Math.PI;\r\n  const strokeDashoffset =\r\n    circumference - (Math.min(progress, 1) - 1) * circumference;\r\n\r\n  const playToStop = useRef(null);\r\n  const stopToPlay = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      playToStop.current.beginElement();\r\n    } else {\r\n      stopToPlay.current.beginElement();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  return (\r\n    <PlaySvg scale={scale} viewBox={\"0 0 110 110\"}>\r\n      <circle\r\n        className=\"ring\"\r\n        stroke={color}\r\n        fill=\"transparent\"\r\n        strokeWidth={stroke}\r\n        strokeDasharray={circumference + \" \" + circumference}\r\n        style={{ strokeDashoffset: strokeDashoffset }}\r\n        r={radius}\r\n        cx={radius + stroke}\r\n        cy={radius + stroke / 2}\r\n      />\r\n      <polygon\r\n        id=\"shape\"\r\n        className=\"icon\"\r\n        stroke=\"#c2c2c2\"\r\n        fill=\"#c2c2c2\"\r\n        points=\"10,0 100,60 100,60 10,100\"\r\n      >\r\n        <animate\r\n          ref={playToStop}\r\n          begin=\"indefinite\"\r\n          attributeName=\"points\"\r\n          fill=\"freeze\"\r\n          dur=\"200ms\"\r\n          to=\"0,0 100,0 100,100 0,100\"\r\n        />\r\n        <animate\r\n          ref={stopToPlay}\r\n          begin=\"indefinite\"\r\n          attributeName=\"points\"\r\n          fill=\"freeze\"\r\n          dur=\"200ms\"\r\n          to=\"10,0 100,60 100,60 10,100\"\r\n        />\r\n      </polygon>\r\n    </PlaySvg>\r\n  );\r\n}\r\n\r\nexport { PlaybackButton };\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PlaybackButton } from \"./PlaybackButton\";\r\nimport { DynamicText } from \"./DynamicText\";\r\n\r\nconst Container = styled(\"div\")`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlaybackButtonContainer = styled(\"div\")`\r\n  height: 100%;\r\n  margin-right: 5%;\r\n  width: 35%;\r\n  min-height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TextContainer = styled(\"div\")`\r\n  width: 55%;\r\n  height: 25%;\r\n  text-overflow: clip;\r\n  white-space: nowrap;\r\n  display: block;\r\n  color: rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nfunction SongSelection({\r\n  playback,\r\n  id,\r\n  title,\r\n  handler,\r\n  color,\r\n  scale,\r\n  isPlaying\r\n}) {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  // animation request\r\n  const requestRef = useRef();\r\n\r\n  const tick = () => {\r\n    // update song progress\r\n    setProgress(playback.getPlaybackTime() / playback.duration);\r\n\r\n    // request next animation tick\r\n    requestRef.current = requestAnimationFrame(tick);\r\n  };\r\n  // start animation loop\r\n  useEffect(() => {\r\n    requestRef.current = requestAnimationFrame(tick);\r\n    return () => cancelAnimationFrame(requestRef.current);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <PlaybackButtonContainer onClick={handler(id)}>\r\n        <PlaybackButton\r\n          scale={scale}\r\n          color={color}\r\n          isPlaying={progress > 0}\r\n          progress={progress}\r\n        />\r\n      </PlaybackButtonContainer>\r\n\r\n      <TextContainer>\r\n        <DynamicText>\r\n          <i>{title}</i>\r\n        </DynamicText>\r\n      </TextContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { SongSelection };\r\n","import { DynamicText } from \"../../DynamicText\";\r\nimport styled from \"styled-components\";\r\nimport { Playback } from \"@ninefour/euphony\";\r\nimport { SongSelection } from \"../../SongSelection\";\r\nimport { useState } from \"react\";\r\n\r\nconst TextContainer = styled(\"div\")`\r\n  width: 100%;\r\n  height: 55%;\r\n  margin-bottom: 5%;\r\n`;\r\n\r\nconst MusicContainer = styled(\"div\")`\r\n  width: 100%;\r\n  height: 40%;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst MusicItem = styled(\"div\")`\r\n  flex-basis: 50%;\r\n  width: 50%;\r\n  height: 50%;\r\n`;\r\n\r\n// load songs\r\nconst pm836 = new Playback();\r\nconst okchristmas = new Playback();\r\nconst kakin = new Playback();\r\nconst bioluminescence = new Playback();\r\n\r\nPromise.all([\r\n  pm836.load(\"/music/836pm.mp3\"),\r\n  okchristmas.load(\"/music/okchristmas.mp3\"),\r\n  kakin.load(\"/music/kakin.mp3\"),\r\n  bioluminescence.load(\"/music/bioluminescence.mp3\")\r\n]);\r\n\r\nconst songs = [\r\n  {\r\n    playback: pm836,\r\n    id: \"pm836\",\r\n    title: \"8:36 pm\"\r\n  },\r\n  {\r\n    playback: okchristmas,\r\n    id: \"okchristmas\",\r\n    title: \"an ok christmas\"\r\n  },\r\n  {\r\n    playback: kakin,\r\n    id: \"kakin\",\r\n    title: \"kakin\"\r\n  },\r\n  {\r\n    playback: bioluminescence,\r\n    id: \"bioluminescence\",\r\n    title: \"bioluminescence\"\r\n  }\r\n];\r\n\r\nfunction Music() {\r\n  const songTracker = {};\r\n  songs.forEach((song) => (songTracker[song.id] = false));\r\n\r\n  const [isPlaying, setIsPlaying] = useState({ ...songTracker });\r\n\r\n  const updateIsPlaying = (id) => {\r\n    // create new copy of song tracker\r\n    let temp = { ...songs };\r\n    // invert play status of selected song\r\n    temp[id] = !isPlaying[id];\r\n\r\n    // update state\r\n    setIsPlaying(temp);\r\n  };\r\n\r\n  const handler = (id) => () => {\r\n    songs.forEach((song) => {\r\n      // change play state of given id\r\n      if (song.id === id) {\r\n        if (song.playback.getPlaybackTime() > 0) {\r\n          song.playback.stop();\r\n        } else {\r\n          song.playback.play();\r\n        }\r\n      }\r\n      // stop all songs that dont match id\r\n      else {\r\n        song.playback.stop();\r\n      }\r\n    });\r\n\r\n    // update state\r\n    updateIsPlaying(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextContainer>\r\n        <DynamicText>\r\n          This one isn’t programming related, but one of my biggest passions in\r\n          life is <em>music</em>\r\n          . I love discovering new things to listen to, playing piano, and even\r\n          making some music myself.\r\n          <br />\r\n          <br />\r\n          If I ever get around to making a more official platform to post my\r\n          music I’ll link it here, but for now press the buttons below if you\r\n          want to have a listen.\r\n        </DynamicText>\r\n      </TextContainer>\r\n      <MusicContainer>\r\n        {songs.map((song, index) => (\r\n          <MusicItem key={index}>\r\n            <SongSelection\r\n              playback={song.playback}\r\n              id={song.id}\r\n              title={song.title}\r\n              handler={handler}\r\n              isPlaying={false}\r\n              scale={0.9}\r\n              color={\"#D40749\"}\r\n            />\r\n          </MusicItem>\r\n        ))}\r\n      </MusicContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Music };\r\n","import { ShaderMaterial, Vector2, GLSL3 } from \"three\"\r\nimport { extend } from \"@react-three/fiber\"\r\n\r\n// fades between the image at prevIndex to the image at index\r\n// fade progress controlled by effectFactor\r\n// note: numTextures is passed as an argument rather than a define due to a limitation with loop unrolling\r\nclass TextureFader extends ShaderMaterial {\r\n  constructor(numTextures) {\r\n    super({\r\n      glslVersion: GLSL3,\r\n      uniforms: {\r\n        effectFactor: { type: \"f\", value: 0 },\r\n        prevIndex: { type: \"i\", value: 0 },\r\n        index: { type: \"i\", value: 0 },\r\n        direction: { type: \"v2\", value: new Vector2(1, 0) },\r\n        imageTextures: { type: \"tv\", value: undefined },\r\n        noiseTexture: { type: \"t\", value: undefined },\r\n        displacementTexture: { type: \"t\", value: undefined },\r\n        noiseIntensity: { type: \"f\", value: 1 },\r\n        displacementIntensity: { type: \"f\", value: 1 },\r\n        displacementOffset: { type: \"v2\", value: new Vector2(0, 0) },\r\n        noiseOffset: { type: \"v2\", value: new Vector2(0, 0) }\r\n      },\r\n      vertexShader: /* glsl */ `\r\n        varying vec2 vUv;\r\n        void main() {\r\n          vUv = uv;\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }`,\r\n      fragmentShader: /* glsl */ `\r\n        uniform int index;\r\n        uniform int prevIndex;\r\n        uniform vec2 direction;\r\n        uniform sampler2D imageTextures[${numTextures}];\r\n        uniform sampler2D noiseTexture;\r\n        uniform sampler2D displacementTexture;\r\n        uniform float effectFactor;\r\n        uniform float noiseIntensity;\r\n        uniform float displacementIntensity;\r\n        uniform vec2 noiseOffset;\r\n        uniform vec2 displacementOffset;\r\n        varying vec2 vUv;\r\n        out vec4 fragColor;\r\n\r\n        void main() {\r\n          // get uv from the vertex shaders\r\n          vec2 uv = vUv;\r\n          // sample noise\r\n          vec3 noise = texture2D(noiseTexture, mod(uv + noiseOffset, 1.0)).rgb * noiseIntensity;\r\n          // sample displacement\r\n          vec4 displacementTexel = texture2D(displacementTexture, mod(uv + displacementOffset, 1.0));\r\n          float displacement = ((displacementTexel.r + displacementTexel.g + displacementTexel.b) / 3.0) * displacementIntensity;\r\n          \r\n          // calculate noise intensity\r\n          if (effectFactor > 0.5) {\r\n            noise = noise * (1.0 - effectFactor);\r\n          }\r\n          else {\r\n            noise = noise * effectFactor;\r\n          }\r\n          \r\n          // calculate dsplacement intensity\r\n          float prevDisplacement = displacement * (1.0 - effectFactor);\r\n          float currentDisplacement = displacement * effectFactor;\r\n          // claculate uv's from displacement and direction\r\n          vec2 prevImageUV = uv - (prevDisplacement * direction);\r\n          vec2 currentImageUV = uv + (currentDisplacement * direction);\r\n          \r\n          // get prev and current image based on indicies\r\n          vec4 prevImage;\r\n          vec4 currentImage;\r\n          #pragma unroll_loop_start\r\n          for (int i = 0; i < ${numTextures}; i++) {\r\n            if (UNROLLED_LOOP_INDEX == prevIndex) {\r\n              prevImage = texture2D(imageTextures[UNROLLED_LOOP_INDEX], prevImageUV);\r\n            }\r\n            if (UNROLLED_LOOP_INDEX == index) {\r\n              currentImage = texture2D(imageTextures[UNROLLED_LOOP_INDEX], currentImageUV);\r\n            }\r\n          }\r\n          #pragma unroll_loop_end\r\n          \r\n          // mix prev and current image based on effectFactor\r\n          vec4 finalTexture = mix(currentImage, prevImage, effectFactor);\r\n          // apply noise to final texture\r\n          finalTexture = vec4(finalTexture.r - noise.r, finalTexture.g - noise.g, finalTexture.b - noise.b, 1.0);\r\n          fragColor = finalTexture;\r\n        }`\r\n    })\r\n  }\r\n\r\n  get index() {\r\n    return this.uniforms.index.value\r\n  }\r\n  set index(v) {\r\n    this.uniforms.index.value = v\r\n  }\r\n  get prevIndex() {\r\n    return this.uniforms.prevIndex.value\r\n  }\r\n  set prevIndex(v) {\r\n    this.uniforms.prevIndex.value = v\r\n  }\r\n  get direction() {\r\n    return this.uniforms.direction.value\r\n  }\r\n  set direction(v) {\r\n    this.uniforms.direction.value = v\r\n  }\r\n  get imageTextures() {\r\n    return this.uniforms.imageTextures.value\r\n  }\r\n  set imageTextures(v) {\r\n    this.uniforms.imageTextures.value = v\r\n  }\r\n  get noiseTexture() {\r\n    return this.uniforms.noiseTexture.value\r\n  }\r\n  set noiseTexture(v) {\r\n    this.uniforms.noiseTexture.value = v\r\n  }\r\n  get displacementTexture() {\r\n    return this.uniforms.displacementTexture.value\r\n  }\r\n  set displacementTexture(v) {\r\n    this.uniforms.displacementTexture.value = v\r\n  }\r\n  get effectFactor() {\r\n    return this.uniforms.effectFactor.value\r\n  }\r\n  set effectFactor(v) {\r\n    this.uniforms.effectFactor.value = v\r\n  }\r\n  get noiseIntensity() {\r\n    return this.uniforms.noiseIntensity.value\r\n  }\r\n  set noiseIntensity(v) {\r\n    this.uniforms.noiseIntensity.value = v\r\n  }\r\n  get displacementIntensity() {\r\n    return this.uniforms.displacementIntensity.value\r\n  }\r\n  set displacementIntensity(v) {\r\n    this.uniforms.displacementIntensity.value = v\r\n  }\r\n  get displacementOffset() {\r\n    return this.uniforms.displacementOffset.value\r\n  }\r\n  set displacementOffset(v) {\r\n    this.uniforms.displacementOffset.value = v\r\n  }\r\n  get noiseOffset() {\r\n    return this.uniforms.noiseOffset.value\r\n  }\r\n  set noiseOffset(v) {\r\n    this.uniforms.noiseOffset.value = v\r\n  }\r\n}\r\n\r\nextend({ TextureFader })","import React, { useEffect, useMemo, useRef } from \"react\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF, useTexture } from \"@react-three/drei\";\r\nimport { TextureLoader, NearestFilter, LinearFilter } from \"three\";\r\nimport \"./shaders/TextureFader\"\r\nimport { lerp } from \"../utils\"\r\n\r\nfunction Laptop({ imageIndex, prevImageIndex, direction, imageUrls, displacementUrl, noiseUrl, ...props }) {\r\n  const { nodes } = useGLTF(\"/models/laptop3.gltf\");\r\n\r\n  const groupRef = useRef();\r\n  const materialRef = useRef();\r\n\r\n  const imageTextures = useTexture(imageUrls);\r\n  const displacementTexture = useTexture(displacementUrl);\r\n  const noiseTexture = useTexture(noiseUrl);\r\n\r\n  useMemo(() => {\r\n    imageTextures.forEach((texture) => {\r\n      texture.flipY = false\r\n      texture.minFilter = LinearFilter\r\n      texture.magFilter = LinearFilter\r\n    }) \r\n  }, [imageTextures]);\r\n  useMemo(() => {\r\n    displacementTexture.minFilter = displacementTexture.magFilter = NearestFilter\r\n  }, [displacementTexture]);\r\n  useMemo(() => {\r\n    noiseTexture.minFilter = noiseTexture.magFilter = NearestFilter\r\n  }, [noiseTexture]);\r\n\r\n  useEffect(() => {\r\n    // update index\r\n    materialRef.current.index = imageIndex\r\n    materialRef.current.prevIndex = prevImageIndex\r\n    // update direction\r\n    materialRef.current.direction = direction\r\n\r\n    // update offsets\r\n    materialRef.current.displacementOffset.fromArray([(materialRef.current.index * 17) / 7, (materialRef.current.index * 7) / 17])\r\n    materialRef.current.noiseOffset.fromArray([(materialRef.current.index * 17) / 7, (materialRef.current.index * 7) / 17])\r\n\r\n    materialRef.current.effectFactor = 1\r\n  }, [imageIndex])\r\n\r\n  useFrame(() => {\r\n    materialRef.current.effectFactor = lerp(materialRef.current.effectFactor, 0, 0.04)\r\n  })\r\n\r\n  function mapGltf(node) {\r\n    if (node.type === \"Group\") {\r\n      return (\r\n        <group\r\n          key={node.name}\r\n          position={node.position}\r\n          scale={node.scale}\r\n          rotation={node.rotation}\r\n        >\r\n          {node.children.map((node) => mapGltf(node))}\r\n        </group>\r\n      );\r\n    } else if (node.type === \"Mesh\") {\r\n      if (node.name === \"screen\") {\r\n        return (\r\n          <mesh\r\n            key={node.name}\r\n            position={node.position}\r\n            scale={node.scale}\r\n            rotation={node.rotation}\r\n            geometry={node.geometry}\r\n          >\r\n            <textureFader \r\n              attach=\"material\"\r\n              ref={materialRef}\r\n              args={[imageTextures.length]}\r\n              imageTextures={imageTextures}\r\n              noiseTexture={noiseTexture}\r\n              displacementTexture={displacementTexture}\r\n              noiseIntensity={0.2}\r\n              displacementIntensity={1.5}\r\n            />\r\n          </mesh>\r\n        );\r\n      } else {\r\n        return (\r\n          <mesh\r\n            key={node.name}\r\n            position={node.position}\r\n            scale={node.scale}\r\n            rotation={node.rotation}\r\n            geometry={node.geometry}\r\n            material={node.material}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <group {...props}>{mapGltf(nodes.Scene)}</group>\r\n    </group>\r\n  );\r\n}\r\n\r\nexport { Laptop };\r\n","import React, { useMemo, useRef, useEffect } from \"react\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF, useTexture } from \"@react-three/drei\";\r\nimport { lerp } from \"../utils\";\r\nimport { TextureLoader, NearestFilter, LinearFilter } from \"three\";\r\nimport \"./shaders/TextureFader\";\r\n\r\nfunction Phone({ imageIndex, prevImageIndex, direction, imageUrls, displacementUrl, noiseUrl, ...props }) {\r\n  const { nodes } = useGLTF(\"/models/phone.gltf\");\r\n\r\n  const group = useRef();\r\n  const materialRef = useRef();\r\n\r\n  const imageTextures = useTexture(imageUrls);\r\n  const displacementTexture = useTexture(displacementUrl);\r\n  const noiseTexture = useTexture(noiseUrl);\r\n\r\n  useMemo(() => {\r\n    imageTextures.forEach((texture) => {\r\n      texture.flipY = false\r\n      texture.minFilter = LinearFilter\r\n      texture.magFilter = LinearFilter\r\n    }) \r\n  }, [imageTextures]);\r\n  useMemo(() => {\r\n    displacementTexture.minFilter = displacementTexture.magFilter = NearestFilter\r\n  }, [displacementTexture]);\r\n  useMemo(() => {\r\n    noiseTexture.minFilter = noiseTexture.magFilter = NearestFilter\r\n  }, [noiseTexture]);\r\n\r\n  useEffect(() => {\r\n    // update index\r\n    materialRef.current.index = imageIndex\r\n    materialRef.current.prevIndex = prevImageIndex\r\n    // update direction\r\n    materialRef.current.direction = direction\r\n\r\n    // update offsets\r\n    materialRef.current.displacementOffset.fromArray([(materialRef.current.index * 17) / 7, (materialRef.current.index * 7) / 17])\r\n    materialRef.current.noiseOffset.fromArray([(materialRef.current.index * 17) / 7, (materialRef.current.index * 7) / 17])\r\n\r\n    materialRef.current.effectFactor = 1\r\n  }, [imageIndex])\r\n\r\n  useFrame(() => {\r\n    materialRef.current.effectFactor = lerp(materialRef.current.effectFactor, 0, 0.04)\r\n  })\r\n\r\n  function mapGltf(node) {\r\n    if (node.type === \"Group\") {\r\n      return (\r\n        <group\r\n          key={node.name}\r\n          position={node.position}\r\n          scale={node.scale}\r\n          rotation={node.rotation}\r\n        >\r\n          {node.children.map((node) => mapGltf(node))}\r\n        </group>\r\n      );\r\n    } else if (node.type === \"Mesh\") {\r\n      if (node.name === \"SCREEN\") {\r\n        return (\r\n          <mesh\r\n            key={node.name}\r\n            position={node.position}\r\n            scale={node.scale}\r\n            rotation={node.rotation}\r\n            geometry={node.geometry}\r\n          >\r\n            <textureFader \r\n              attach=\"material\"\r\n              ref={materialRef}\r\n              args={[imageTextures.length]}\r\n              imageTextures={imageTextures}\r\n              noiseTexture={noiseTexture}\r\n              displacementTexture={displacementTexture}\r\n              noiseIntensity={0.2}\r\n              displacementIntensity={1.5}\r\n            />\r\n          </mesh>\r\n        );\r\n      } else {\r\n        return (\r\n          <mesh\r\n            key={node.name}\r\n            position={node.position}\r\n            scale={node.scale}\r\n            rotation={node.rotation}\r\n            geometry={node.geometry}\r\n            material={node.material}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <group ref={group}>\r\n      <group {...props}>{mapGltf(nodes.Scene)}</group>\r\n    </group>\r\n  );\r\n}\r\n\r\nexport { Phone };\r\n","import React, { useMemo } from \"react\";\r\nimport { useLoader, useThree } from \"@react-three/fiber\";\r\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader\";\r\n\r\nfunction Svg({ url, color, ...props }) {\r\n  // get shape data\r\n  const { paths } = useLoader(SVGLoader, url);\r\n  const svgData = useMemo(\r\n    () =>\r\n      paths.flatMap((path, index) =>\r\n        path\r\n          .toShapes(true)\r\n          .map((shape) => ({ shape: shape, color: path.color, index }))\r\n      ),\r\n    [paths]\r\n  );\r\n  const shapes = svgData.map((data) => data.shape);\r\n\r\n  // center the geometry after it is rendered\r\n  const center = (self) => self.center();\r\n\r\n  return (\r\n    <mesh {...props}>\r\n      <shapeGeometry onUpdate={center} args={[shapes, 12]} />\r\n      <meshBasicMaterial color={color} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport { Svg };\r\n","import { animated } from \"@react-spring/web\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled(\"div\")`\r\n  width: 100%;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n  &:active {\r\n    transform: translateY(2%);\r\n  }\r\n`;\r\n\r\nconst ArrowSvg = styled(\"svg\")`\r\n  transform: rotateY(${(props) => (props.isLeft ? 180 : 0)}deg);\r\n`;\r\n\r\nfunction Arrow({ color, isLeft }) {\r\n  return (\r\n    <Container>\r\n      <ArrowSvg viewBox=\"0 0 60 100\" isLeft={isLeft}>\r\n        <polygon fill={color} points=\"0,0 60,50 0,100 0,75 25,50 0,25\" />\r\n      </ArrowSvg>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { Arrow };\r\n","import styled from \"styled-components\";\r\nimport { useSpring } from \"@react-spring/core\";\r\nimport { animated } from \"@react-spring/web\";\r\nimport { useState } from \"react\";\r\n\r\nconst Container = styled(animated.div)`\r\n  height: ${(props) => props.size}vh;\r\n  width: ${(props) => props.size * 5}vh;\r\n  background-color: var(--color);\r\n  border-radius: ${(props) => props.size}vh;\r\n  cursor: pointer;\r\n  transform: translateX(1px);\r\n`;\r\n\r\nconst Marker = styled(animated.div)`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  height: ${(props) => props.size}vh;\r\n  width: ${(props) => props.size}vh;\r\n  background-color: black;\r\n  border-radius: 100%;\r\n  z-index: 1;\r\n  transform-origin: center;\r\n  transform: translateX(-50%) translateX(var(--offset, 0)) scale(0.85);\r\n`;\r\n\r\nconst Text = styled(animated.div)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  font-size: ${(props) => props.size / 1.5}vh;\r\n  color: var(--color);\r\n  transform: translate(-50%, -50%);\r\n  user-select: none;\r\n`;\r\n\r\nfunction Slider({ toggle, size, leftColor, rightColor, onClick }) {\r\n  const { markerToggle } = useSpring({\r\n    markerToggle: Number(toggle),\r\n    config: {\r\n      mass: 1,\r\n      tension: 210,\r\n      friction: 30,\r\n      clamp: true\r\n    }\r\n  });\r\n  const { colorToggle } = useSpring({\r\n    colorToggle: Number(toggle),\r\n    config: {\r\n      mass: 1,\r\n      tension: 120,\r\n      friction: 40\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container\r\n      size={size}\r\n      onClick={onClick}\r\n      style={{\r\n        \"--color\": colorToggle.to({ output: [leftColor, rightColor] })\r\n      }}\r\n    >\r\n      <Text\r\n        size={size}\r\n        style={{\r\n          \"--color\": colorToggle.to({ output: [\"#cccccc\", \"#000000\"] })\r\n        }}\r\n      >\r\n        <b>{toggle ? \"mobile\" : \"desktop\"}</b>\r\n      </Text>\r\n      <Marker\r\n        size={size}\r\n        style={{\r\n          \"--offset\": markerToggle\r\n            .to({ output: [-size * 2, size * 2] })\r\n            .to((value) => `${value}vh`)\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { Slider };\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useThree, useFrame } from \"@react-three/fiber\";\r\nimport { useStore } from \"../../store\";\r\nimport { Section, SectionItem } from \"./Section\";\r\nimport { useHelper, Html } from \"@react-three/drei\";\r\nimport { Laptop } from \"../Laptop\";\r\nimport { Phone } from \"../Phone\";\r\nimport { Svg } from \"../Svg\";\r\nimport { Arrow } from \"../Arrow\";\r\nimport { Slider } from \"../Slider\";\r\nimport { useSpring } from \"@react-spring/core\";\r\nimport { animated } from \"@react-spring/three\";\r\nimport { SpotLightHelper, Vector2 } from \"three\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ArrowContainer = styled(\"div\")`\r\n  position: absolute;\r\n  left: ${(props) => (props.isLeft ? \"-35vw\" : \"35vw\")};\r\n  bottom: ${(props) => \r\n    props.ismobile\r\n      ? `-41.5vh`\r\n      : `0vh`};\r\n  width: 6vw;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst SliderContainer = styled(\"div\")`\r\n  position: absolute;\r\n  bottom: -40vh;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nfunction PortfolioSection({ index, parallax }) {\r\n  // calculate base width and height\r\n  const { size } = useThree();\r\n  const marginX = useStore((state) => state.marginX);\r\n  const width = size.width * (1 - marginX);\r\n  const marginY = useStore((state) => state.marginY);\r\n  const height = size.height * (1 - marginY);\r\n\r\n  // use mobile layout if vertical orientation\r\n  const isMobile = size.width < size.height;\r\n\r\n  // adjust section height based on if mobile layout is used\r\n  const sectionHeight = 100;\r\n\r\n  // get colors\r\n  const primary = useStore((state) => state.primaryColor);\r\n  const secondary = useStore((state) => state.secondaryColor);\r\n\r\n  // laptop / phone images\r\n  const laptopImages = [\r\n    \"/images/sites/mlmp/desktop/home_dark.png\",\r\n    \"/images/sites/mlmp/desktop/module_dark.png\",\r\n    \"/images/sites/mlmp/desktop/home_light.png\",\r\n    \"/images/sites/mlmp/desktop/module_light.png\"\r\n  ]\r\n  const phoneImages = [\r\n    \"/images/sites/mlmp/mobile/home_dark.png\",\r\n    \"/images/sites/mlmp/mobile/home_light.png\",\r\n    \"/images/sites/mlmp/mobile/module_dark.png\",\r\n    \"/images/sites/mlmp/mobile/module_light.png\"\r\n  ]\r\n  // noise / displacement maps\r\n  const noiseUrl = \"/images/noise.jpg\";\r\n  const displacementUrl = \"/images/displacement.jpg\"\r\n\r\n\r\n  /* Calculate Positions / sizes */\r\n  const phoneScale = width / (isMobile ? 4 : 8);\r\n  const phoneY = -phoneScale;\r\n  const phonePosition = [0, phoneY, 0];\r\n\r\n  const laptopScale = width / (isMobile ? 40 : 65);\r\n  const laptopY = -laptopScale * 8;\r\n  const laptopPosition = [0, laptopY, 0];\r\n\r\n  // device color (actually controls ambient light color which is then reflected diffusely)\r\n  const [colorToggle, setColorToggle] = useState(false);\r\n  const { colorSpring } = useSpring({\r\n    colorSpring: Number(colorToggle),\r\n    config: {\r\n      mass: 1,\r\n      tension: 280,\r\n      friction: 120\r\n    }\r\n  });\r\n\r\n  // set light directions\r\n  const spotLightRef = useRef();\r\n  const directionalLightRef= useRef();\r\n  const lightTargetRef = useRef();\r\n  useEffect(() => {\r\n    spotLightRef.current.target = lightTargetRef.current\r\n    directionalLightRef.current.target = lightTargetRef.current\r\n  }, []);\r\n\r\n  // state to handle mouse style when hovering objects\r\n  const [hovered, setHovered] = useState(false);\r\n  useEffect(\r\n    () => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"),\r\n    [hovered]\r\n  );\r\n\r\n  // image indices and direction to pass to textureFader shader\r\n  const [imageIndex, setImageIndex] = useState({ prev: 0, current: 0 })\r\n  const [direction, setDirection] = useState(new Vector2(0, 0))\r\n\r\n  // handlers for left / right arrow\r\n  const handleClickLeft = () => {\r\n    // go to previous image\r\n    setImageIndex({\r\n      prev: imageIndex.current,\r\n      current: imageIndex.current === 0 ? laptopImages.length - 1 : imageIndex.current - 1\r\n    })\r\n    // set direction to left and slightly down\r\n    setDirection(new Vector2(-1, 0.1))\r\n\r\n    // switch color\r\n    setColorToggle(!colorToggle)\r\n  }\r\n  const handleClickRight = () => {\r\n    // go to next image\r\n    setImageIndex({\r\n      prev: imageIndex.current,\r\n      current: (imageIndex.current + 1) % laptopImages.length\r\n    })\r\n    // set direction to right and slightly down\r\n    setDirection(new Vector2(1, 0.1))\r\n    \r\n    // switch color\r\n    setColorToggle(!colorToggle)\r\n  }\r\n\r\n  // toggle for current device\r\n  const [deviceToggle, setDeviceToggle] = useState(false);\r\n  const { deviceSpring } = useSpring({\r\n    deviceSpring: Number(deviceToggle),\r\n    config: {\r\n      mass: 1,\r\n      tension: 120,\r\n      friction: 18\r\n    }\r\n  });\r\n\r\n\r\n  // set up laptop / phone motion\r\n  const laptopRef = useRef();\r\n  const phoneRef = useRef();\r\n  useFrame(({ clock }) => {\r\n    const t = clock.getElapsedTime();\r\n\r\n    laptopRef.current.rotation.x = Math.cos(t / 2) / 16;\r\n    laptopRef.current.rotation.y = Math.sin(t / 3) / 8;\r\n    laptopRef.current.rotation.z = Math.sin(t / 5) / 8;\r\n    laptopRef.current.position.y = (Math.sin(t) * height) / 64;\r\n\r\n    phoneRef.current.rotation.x = Math.sin(t / 2) / 16;\r\n    phoneRef.current.rotation.y = Math.cos(t / 3) / 8;\r\n    phoneRef.current.rotation.z = Math.cos(t / 5) / 8;\r\n    phoneRef.current.position.y = (Math.cos(t) * height) / 64;\r\n  });\r\n\r\n  return (\r\n    <Section index={index} parallax={parallax} height={sectionHeight}>\r\n      <animated.ambientLight\r\n        intensity={1.8}\r\n        color={colorSpring.to({ output: [primary, secondary] })}\r\n      />\r\n      <animated.directionalLight\r\n        ref={directionalLightRef}\r\n        position={[500, 2500, 3000]}\r\n        intensity={2}\r\n        color={\"#f0f0f0\"}\r\n      />\r\n      <spotLight\r\n        ref={spotLightRef}\r\n        intensity={0.8}\r\n        position={[500, 750, 5000]}\r\n        angle={Math.PI / 5}\r\n        color={\"#f0f0f0\"}\r\n      />\r\n      <object3D ref={lightTargetRef} position={[-2000, -1500, 0]} />\r\n\r\n      <SectionItem parallax={1}>\r\n        <Html zIndexRange={[0, 0]}>\r\n          <ArrowContainer isLeft ismobile={isMobile} onClick={handleClickLeft}>\r\n            <Arrow isLeft color={secondary} />\r\n          </ArrowContainer>\r\n          <ArrowContainer ismobile={isMobile} onClick={handleClickRight}>\r\n            <Arrow color={primary} />\r\n          </ArrowContainer>\r\n        </Html>\r\n      </SectionItem>\r\n\r\n      <SectionItem parallax={0.4}>\r\n        <Html>\r\n          <SliderContainer>\r\n            <Slider\r\n              toggle={deviceToggle}\r\n              size={4}\r\n              leftColor={primary}\r\n              rightColor={secondary}\r\n              onClick={() => setDeviceToggle(!deviceToggle)}\r\n            />\r\n          </SliderContainer>\r\n        </Html>\r\n      </SectionItem>\r\n\r\n      <SectionItem parallax={0.4}>\r\n        <group position={[0, 0, 1000]}>\r\n          <animated.group\r\n            ref={laptopRef}\r\n            position-x={deviceSpring.to({ output: [0, width * 1.5] })}\r\n          >\r\n            <Laptop\r\n              imageIndex={imageIndex.current}\r\n              prevImageIndex={imageIndex.prev}\r\n              direction={direction}\r\n              imageUrls={laptopImages} \r\n              displacementUrl={displacementUrl}\r\n              noiseUrl={noiseUrl}\r\n              scale={laptopScale}\r\n              position={laptopPosition}\r\n              rotation={[0.25, 0, 0]}\r\n              onClick={() => setDeviceToggle(!deviceToggle)}\r\n              onPointerEnter={() => setHovered(true)}\r\n              onPointerOut={() => setHovered(false)}\r\n            />\r\n          </animated.group>\r\n\r\n          <animated.group\r\n            ref={phoneRef}\r\n            position-x={deviceSpring.to({ output: [-width * 1.25, 0] })}\r\n          >\r\n            <Phone\r\n              imageIndex={imageIndex.current}\r\n              prevImageIndex={imageIndex.prev}\r\n              direction={direction}\r\n              imageUrls={phoneImages} \r\n              displacementUrl={displacementUrl}\r\n              noiseUrl={noiseUrl}\r\n              scale={phoneScale}\r\n              position={phonePosition}\r\n              rotation={[0, 0, 0]}\r\n              onClick={() => setDeviceToggle(!deviceToggle)}\r\n              onPointerEnter={() => setHovered(true)}\r\n              onPointerOut={() => setHovered(false)}\r\n            />\r\n          </animated.group>\r\n        </group>\r\n      </SectionItem>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport { PortfolioSection };\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { FontLoader, TextGeometry, BufferAttribute, BufferGeometry } from \"three\"\r\nimport { useThree, useFrame } from \"@react-three/fiber\";\r\nimport { Text } from \"@react-three/drei\";\r\nimport { useStore } from \"../../store\";\r\nimport { Section, SectionItem } from \"./Section\";\r\nimport BorisBlackBloxx from \"../../fonts/BorisBlackBloxx.json\"\r\nimport Yuji_Syuku from \"../../fonts/Yuji_Syuku.json\"\r\nimport { lerp } from \"../../utils\";\r\n\r\nfunction EndSection({ index, parallax }) {\r\n  // calculate base width and height\r\n  const { size } = useThree();\r\n  const marginX = useStore((state) => state.marginX);\r\n  const width = size.width * (1 - marginX);\r\n  const marginY = useStore((state) => state.marginY);\r\n  const height = size.height * (1 - marginY);\r\n\r\n  // adjust section height based on if mobile layout is used\r\n  const sectionHeight = 100;\r\n\r\n  // get colors\r\n  const primary = useStore((state) => state.primaryColor);\r\n  const secondary = useStore((state) => state.secondaryColor);\r\n\r\n  /* Calculate Positions / sizes */\r\n\r\n  const fontSize = width / 10;\r\n  const textX = 0;\r\n  const textY = fontSize / 2;\r\n  const textPosition = [textX, textY, 0];\r\n  \r\n  //\r\n\r\n  const font = new FontLoader().parse(BorisBlackBloxx)\r\n  const fontJp = new FontLoader().parse(Yuji_Syuku)\r\n\r\n  const nineGeometry = new TextGeometry(\"nine\", {\r\n    font: font,\r\n    size: fontSize,\r\n    height: 0.01\r\n  })\r\n  nineGeometry.center()\r\n\r\n  const nineGeometryJp = new TextGeometry(\"九\", {\r\n    font: fontJp,\r\n    size: fontSize * 1.25,\r\n    height: 0.01\r\n  })\r\n  nineGeometryJp.center()\r\n\r\n  const nineBufferSize = Math.max(nineGeometry.attributes.position.count, nineGeometryJp.attributes.position.count) * 3\r\n\r\n  const nineBuffer = new Float32Array(nineBufferSize)\r\n  nineBuffer.set(nineGeometry.attributes.position.array)\r\n\r\n  const nineBufferJp = new Float32Array(nineBufferSize)\r\n  nineBufferJp.set(nineGeometryJp.attributes.position.array)\r\n\r\n  nineGeometry.setAttribute(\"position\", new BufferAttribute(nineBuffer, 3))\r\n  nineGeometry.morphAttributes.position = [new BufferAttribute(nineBufferJp, 3)]\r\n\r\n\r\n  const fourGeometry = new TextGeometry(\"four\", {\r\n    font: font,\r\n    size: fontSize,\r\n    height: 0.01\r\n  })\r\n  fourGeometry.center()\r\n\r\n  const fourGeometryJp = new TextGeometry(\"四\", {\r\n    font: fontJp,\r\n    size: fontSize * 1.25,\r\n    height: 0.01\r\n  })\r\n  fourGeometryJp.center()\r\n\r\n  const fourBufferSize = Math.max(fourGeometry.attributes.position.count, fourGeometryJp.attributes.position.count) * 3\r\n\r\n  const fourBuffer = new Float32Array(fourBufferSize)\r\n  fourBuffer.set(fourGeometry.attributes.position.array)\r\n\r\n  const fourBufferJp = new Float32Array(fourBufferSize)\r\n  fourBufferJp.set(fourGeometryJp.attributes.position.array)\r\n\r\n  fourGeometry.setAttribute(\"position\", new BufferAttribute(fourBuffer, 3))\r\n  fourGeometry.morphAttributes.position = [new BufferAttribute(fourBufferJp, 3)]\r\n  //\r\n\r\n  const nineRef = useRef()\r\n  const fourRef = useRef()\r\n  useEffect(() => {\r\n    nineRef.current.updateMorphTargets()\r\n    fourRef.current.updateMorphTargets()\r\n  }, [])\r\n\r\n  const [nineHovered, setNineHovered] = useState(false)\r\n  const [fourHovered, setFourHovered] = useState(false)\r\n\r\n  const [nineState, setNineState] = useState(false)\r\n  const [fourState, setFourState] = useState(false)\r\n\r\n  useFrame(({clock}) => {\r\n    const time = clock.getElapsedTime() / 4\r\n    const hoverInfluenceNine = Math.sin(time) * 0.05 + 0.5\r\n    const hoverInfluenceFour = Math.cos(time) * 0.05 + 0.5\r\n    nineRef.current.morphTargetInfluences[0] = lerp(nineRef.current.morphTargetInfluences[0], nineHovered ? hoverInfluenceNine : Number(nineState), 0.03)\r\n    fourRef.current.morphTargetInfluences[0] = lerp(fourRef.current.morphTargetInfluences[0], fourHovered ? hoverInfluenceFour : Number(fourState), 0.03)\r\n  })\r\n\r\n  return (\r\n    <Section index={index} parallax={parallax} height={sectionHeight}>\r\n      <SectionItem parallax={2}>\r\n        <group position={textPosition}>\r\n          <group>\r\n            <mesh\r\n              ref={nineRef}\r\n              geometry={nineGeometry}\r\n            >\r\n              <meshBasicMaterial color={secondary} />\r\n            </mesh>\r\n            <mesh\r\n              onPointerEnter={() => {setNineHovered(true); setNineState(!nineState)}}\r\n              onPointerOut={() => {setNineHovered(false)}}\r\n            >\r\n              <planeGeometry args={[fontSize * 4, fontSize * 1.5]}/>\r\n              <meshBasicMaterial transparent opacity={0}/>\r\n            </mesh>\r\n          </group>\r\n\r\n          <group position={[0, -fontSize / 1.3, 1]}>\r\n            <mesh \r\n              ref={fourRef}\r\n              geometry={fourGeometry}\r\n            >\r\n              <meshBasicMaterial color={primary} />\r\n            </mesh>\r\n            <mesh\r\n                onPointerEnter={() => {setFourHovered(true); setFourState(!fourState)}}\r\n                onPointerOut={() => {setFourHovered(false)}}\r\n              >\r\n                <planeGeometry args={[fontSize * 4, fontSize * 1.5]}/>\r\n                <meshBasicMaterial transparent opacity={0}/>\r\n              </mesh>\r\n          </group>\r\n          \r\n        </group>\r\n      </SectionItem>\r\n\r\n      <SectionItem parallax={4}>\r\n        <mesh rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]}>\r\n          <planeGeometry args={[width * 3, height * 2, 32, 32]} />\r\n          <meshBasicMaterial color={\"#000\"} />\r\n        </mesh>\r\n      </SectionItem>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport { EndSection };\r\n\r\n","import { useRef, useEffect } from \"react\";\r\nimport { useThree, useFrame } from \"@react-three/fiber\";\r\nimport { useStore } from \"../store\";\r\nimport { Svg } from \"./Svg\";\r\nimport { lerp, seedRandomRange } from \"../utils\";\r\nimport seedRandom from \"seedrandom\";\r\n\r\nfunction Background() {\r\n  const { size } = useThree();\r\n\r\n  // generate seed for bgBrush generation\r\n  const baseSeed = useStore((state) => state.baseSeed);\r\n\r\n  // generate a brush section for each section\r\n  const numSections = 8;\r\n  const brushSections = [];\r\n  for (let i = 0; i < numSections; i++) {\r\n    const seed = new seedRandom(baseSeed + i);\r\n\r\n    // generate 1 to 3 brushes\r\n    const brushes = [];\r\n    const count = Math.floor(seedRandomRange(seed, 2, 4));\r\n    for (let i = 0; i < count; i++) {\r\n      // generate brush\r\n      const svg = `/svg/brush${Math.floor(seedRandomRange(seed, 0, 7))}.svg`;\r\n\r\n      // generate position\r\n      const x = seedRandomRange(seed, -size.width / 2, size.width / 2);\r\n      const y = seedRandomRange(seed, -size.height / 2, size.height / 2);\r\n      const position = [x, y, 0];\r\n      // generate rotation\r\n      const rotation = [0, 0, Math.PI * seedRandomRange(seed, -0.3, 0.3)];\r\n      // generate scale\r\n      const scale = [\r\n        seedRandomRange(seed, 0.5, 1.1),\r\n        seedRandomRange(seed, 0.5, 1.1),\r\n        0\r\n      ];\r\n\r\n      brushes.push({\r\n        svg: svg,\r\n        position: position,\r\n        rotation: rotation,\r\n        scale: scale\r\n      });\r\n    }\r\n\r\n    brushSections[i] = brushes;\r\n  }\r\n  // set up a ref to the sub group so that we can scroll it relative to the position\r\n  const groupRef = useRef();\r\n  // set up transient subscription to the scroll position\r\n  const scrollRef = useRef(useStore.getState().scrollPosition);\r\n  useEffect(\r\n    () =>\r\n      useStore.subscribe(\r\n        (scrollPosition) => (scrollRef.current = scrollPosition),\r\n        (state) => state.scrollPosition\r\n      ),\r\n    []\r\n  );\r\n  // lerp y position to scroll position (adjusted for parallax) for a smooth scroll effect\r\n  useFrame(() => {\r\n    groupRef.current.position.y = lerp(\r\n      groupRef.current.position.y,\r\n      scrollRef.current,\r\n      0.07\r\n    );\r\n  });\r\n\r\n  return (\r\n    <group ref={groupRef} position={[0, 0, -1000]}>\r\n      {brushSections.map((brushSection, index) => (\r\n        <group key={index} position={[0, -size.height * index, 0]}>\r\n          {brushSection.map((brush, index) => (\r\n            <Svg\r\n              key={index}\r\n              url={brush.svg}\r\n              position={brush.position}\r\n              rotation={brush.rotation}\r\n              scale={brush.scale}\r\n              color={\"#181818\"}\r\n            />\r\n          ))}\r\n        </group>\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n\r\nexport { Background };\r\n","import React from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport styled from \"styled-components\";\r\nimport { TitleSection } from \"./components/sections/TitleSection\";\r\nimport { ContentSection } from \"./components/sections/ContentSection\";\r\nimport {\r\n  AboutMe,\r\n  CommercialWork,\r\n  Research,\r\n  Euphony,\r\n  Music\r\n} from \"./components/sections/content/ContentIndex\";\r\nimport { PortfolioSection } from \"./components/sections/PortfolioSection\";\r\nimport { EndSection } from \"./components/sections/EndSection\";\r\nimport { Background } from \"./components/Background\";\r\nimport { Stats } from \"@react-three/drei\";\r\n\r\nconst CanvasContainer = styled(\"div\")`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <CanvasContainer>\r\n      <Canvas\r\n        linear\r\n        orthographic\r\n        dpr={[2, 2]}\r\n        camera={{ position: [0, 0, 10000], far: 11000 }}\r\n      >\r\n        <TitleSection index={0} parallax={1.5} />\r\n\r\n        <ContentSection\r\n          alternate\r\n          index={1}\r\n          header={\"about me\"}\r\n          bgText={\"<meta>\"}\r\n          image=\"/images/self.jpg\"\r\n        >\r\n          <AboutMe />\r\n        </ContentSection>\r\n        <ContentSection\r\n          index={2}\r\n          header={\"commercial work\"}\r\n          bgText={\"<main>\"}\r\n          image=\"/images/tree.jpg\"\r\n        >\r\n          <CommercialWork />\r\n        </ContentSection>\r\n\r\n        <PortfolioSection index={3} parallax={1.25} />\r\n\r\n        <ContentSection\r\n          alternate\r\n          index={4}\r\n          header={\"research\"}\r\n          bgText={\"<data>\"}\r\n          image=\"/images/distorted.jpg\"\r\n        >\r\n          <Research />\r\n        </ContentSection>\r\n        <ContentSection\r\n          index={5}\r\n          header={\"euphony\"}\r\n          bgText={\"<script>\"}\r\n          image=\"/images/music.jpg\"\r\n        >\r\n          <Euphony />\r\n        </ContentSection>\r\n        <ContentSection\r\n          alternate\r\n          index={6}\r\n          header={\"music\"}\r\n          bgText={\"<audio>\"}\r\n          image=\"/images/line.jpg\"\r\n        >\r\n          <Music />\r\n        </ContentSection>\r\n\r\n        <EndSection index={7} parallax={1.5} />\r\n        <Background />\r\n      </Canvas>\r\n    </CanvasContainer>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","import React, { useEffect } from \"react\";\r\nimport { useStore } from \"../store\";\r\nimport { contentsEqual } from \"../utils\";\r\n\r\nfunction ScrollHandler() {\r\n  // breakpoints for snapping to each section\r\n  const breakpoints = useStore(\r\n    (state) => state.breakpoints,\r\n    (oldBreakpoints, newBreakpoints) =>\r\n      contentsEqual(oldBreakpoints, newBreakpoints)\r\n  );\r\n\r\n  // snap callback function\r\n  const snapFunction = () => {\r\n    const offset = window.innerHeight * 0.5;\r\n\r\n    // get current scroll position\r\n    const scrollPosition = useStore.getState().scrollPosition;\r\n\r\n    // check if any breakpoints are near current scroll position\r\n    let closeBreakpoint = null;\r\n    breakpoints.forEach((breakpoint) => {\r\n      if (\r\n        breakpoint + offset >= scrollPosition &&\r\n        breakpoint - offset <= scrollPosition\r\n      ) {\r\n        closeBreakpoint = breakpoint;\r\n      }\r\n    });\r\n    // if close breakpoint was found snap to it\r\n    if (closeBreakpoint) {\r\n      useStore.setState({ scrollPosition: closeBreakpoint });\r\n    }\r\n  };\r\n\r\n  const applyScrollDelta = useStore((state) => state.applyScrollDelta);\r\n  useEffect(() => {\r\n    let timeout = null;\r\n    // scrolling via mouse wheel\r\n    const handleWheel = (event) => {\r\n      // adjust scroll position\r\n      applyScrollDelta((event.deltaY / 100) * (window.innerHeight / 8));\r\n      // clear timeout if one exists\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n      // call snap function after short delay\r\n      timeout = setTimeout(snapFunction, 500);\r\n    };\r\n    window.addEventListener(\"wheel\", handleWheel);\r\n\r\n    // scrolling via touch\r\n    let previousY;\r\n    // touch start\r\n    const handleTouchstart = (event) => {\r\n      if (event.touches.length === 1) {\r\n        previousY = event.touches.item(0).clientY;\r\n      }\r\n    };\r\n    window.addEventListener(\"touchstart\", handleTouchstart);\r\n    //touch move\r\n    const handleTouchmove = (event) => {\r\n      applyScrollDelta((previousY - event.touches.item(0).clientY) * 1.6);\r\n      previousY = event.touches.item(0).clientY;\r\n    };\r\n    window.addEventListener(\"touchmove\", handleTouchmove);\r\n    //touch end\r\n    const handleTouchend = (event) => {\r\n      if (event.touches.lenghth === 0) {\r\n        // clear timeout if one exists\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n        }\r\n        // call snap function after short delay\r\n        timeout = setTimeout(snapFunction, 500);\r\n      }\r\n    };\r\n    window.addEventListener(\"touchend\", handleTouchend);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"wheel\", handleWheel);\r\n      window.removeEventListener(\"touchstart\", handleTouchstart);\r\n      window.removeEventListener(\"touchmove\", handleTouchmove);\r\n      window.removeEventListener(\"touchend\", handleTouchend);\r\n    };\r\n  });\r\n\r\n  return null;\r\n}\r\n\r\nexport { ScrollHandler };\r\n","function Square({ size }) {\r\n  const strokeWidth = 1.5;\r\n  return (\r\n    <svg\r\n      style={{ display: \"block\", margin: \"auto\" }}\r\n      viewBox={`\r\n        ${-strokeWidth / 2} \r\n        ${-strokeWidth / 2} \r\n        ${size + strokeWidth} \r\n        ${size + strokeWidth}\r\n      `}\r\n    >\r\n      <rect\r\n        width={size}\r\n        height={size}\r\n        strokeWidth={strokeWidth}\r\n        stroke={\"white\"}\r\n        fill={\"white\"}\r\n        fillOpacity={0.1}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport { Square };\r\n","function Circle({ size }) {\r\n  const strokeWidth = 1.5;\r\n  return (\r\n    <svg\r\n      style={{ display: \"block\", margin: \"auto\" }}\r\n      viewBox={`\r\n        ${-strokeWidth / 2} \r\n        ${-strokeWidth / 2} \r\n        ${size + strokeWidth} \r\n        ${size + strokeWidth}\r\n      `}\r\n    >\r\n      <circle\r\n        r={size / 2}\r\n        cx={size / 2}\r\n        cy={size / 2}\r\n        strokeWidth={2}\r\n        stroke={\"white\"}\r\n        fill={\"white\"}\r\n        fillOpacity={0.1}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport { Circle };\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"../../store\";\r\nimport { lerp } from \"../../utils\";\r\nimport { Square } from \"./Square\";\r\nimport { useSpring } from \"@react-spring/core\";\r\nimport { animated } from \"@react-spring/web\";\r\n\r\nconst Container = styled(animated.div)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: ${(props) => props.size * props.scalefactor}px;\r\n  height: ${(props) => props.size * props.scalefactor}px;\r\n  right: ${(props) =>\r\n    props.ismobile\r\n      ? `calc(50% - ${-props.offset}px)`\r\n      : `${props.size * 1.5}px`};\r\n  top: ${(props) =>\r\n    props.ismobile ? \"auto\" : `calc(50% - ${props.offset}px)`};\r\n  bottom: ${(props) => (props.ismobile ? `${props.size * 0.25}px` : \"auto\")};\r\n  transform: translate(\r\n      ${(props) => (props.size * props.scalefactor) / 2}px,\r\n      ${(props) => (-props.size * props.scalefactor) / 2}px\r\n    )\r\n    translate(\r\n      ${(props) =>\r\n        props.ismobile ? `var(--shift, 0px), 0px` : `0px, var(--shift, 0px)`}\r\n    )\r\n    rotateZ(var(--rotate, 0rad));\r\n`;\r\n\r\nfunction PositionMarker({\r\n  ismobile,\r\n  size,\r\n  offsetDistance,\r\n  numSections,\r\n  jumpDirection\r\n}) {\r\n  const scaleFactor = 2.25;\r\n  const startOffset = (offsetDistance * (numSections - 1)) / 2;\r\n\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n\r\n  // set up transient subscription to the scroll position\r\n  const scrollRef = useRef(useStore.getState().scrollPosition);\r\n  useEffect(\r\n    () =>\r\n      useStore.subscribe(\r\n        (scrollPosition) => (scrollRef.current = scrollPosition),\r\n        (state) => state.scrollPosition\r\n      ),\r\n    []\r\n  );\r\n\r\n  // set up animation loop to keep scroll position up to date\r\n  const animationRef = useRef();\r\n  const animate = () => {\r\n    // lerp towards scroll position for smooth ramp with damping\r\n    setScrollPosition((prevPosition) => {\r\n      return lerp(prevPosition, scrollRef.current, 0.07);\r\n    });\r\n\r\n    animationRef.current = requestAnimationFrame(animate);\r\n  };\r\n  useEffect(() => {\r\n    animationRef.current = requestAnimationFrame(animate);\r\n    return () => cancelAnimationFrame(animationRef.current);\r\n  }, []);\r\n\r\n  const { rotate } = useSpring({\r\n    to: {\r\n      rotate: jumpDirection\r\n    },\r\n    from: {\r\n      rotate: 0\r\n    },\r\n    config: { mass: 1, tension: 200, friction: 50 }\r\n  });\r\n\r\n  return (\r\n    <Container\r\n      size={size}\r\n      scalefactor={scaleFactor}\r\n      offset={startOffset}\r\n      ismobile={ismobile}\r\n      style={{\r\n        \"--shift\": `${\r\n          (scrollPosition / window.innerHeight) * offsetDistance\r\n        }px`,\r\n        \"--rotate\":\r\n          jumpDirection !== 0\r\n            ? rotate.to((value) => `${value * Math.PI}rad`)\r\n            : `${(scrollPosition / window.innerHeight) * Math.PI}rad`\r\n      }}\r\n    >\r\n      <Square size={size * scaleFactor} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { PositionMarker };\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { animated } from \"@react-spring/web\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"../../store\";\r\nimport { Square } from \"./Square\";\r\nimport { Circle } from \"./Circle\";\r\nimport { PositionMarker } from \"./PositionMarker\";\r\n// top: calc(50% - ${(props) => props.offset}px)\r\nconst MarkerContainer = styled(\"div\")`\r\n  position: absolute;\r\n  width: ${(props) => props.size}px;\r\n  height: ${(props) => props.size}px;\r\n  right: ${(props) =>\r\n    props.ismobile\r\n      ? `calc(50% - ${-props.offset}px)`\r\n      : `${props.size * 1.5}px`};\r\n  top: ${(props) =>\r\n    props.ismobile ? \"auto\" : `calc(50% - ${props.offset}px)`};\r\n  bottom: ${(props) => (props.ismobile ? `${props.size * 1.5}px` : \"auto\")};\r\n  transform: translate(\r\n    ${(props) => props.size / 2}px,\r\n    ${(props) => -props.size / 2}px\r\n  );\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Marker({\r\n  isStartEnd,\r\n  size,\r\n  offset,\r\n  breakpoint,\r\n  setJumpDirection,\r\n  timeoutRef,\r\n  ismobile\r\n}) {\r\n  const handleClick = () => {\r\n    setJumpDirection((prevValue) => {\r\n      let newValue =\r\n        prevValue + Math.sign(breakpoint - useStore.getState().scrollPosition);\r\n      if (newValue === 0) {\r\n        newValue = Math.sign(breakpoint - useStore.getState().scrollPosition);\r\n      }\r\n      return newValue;\r\n    });\r\n    // update the scroll position now that\r\n    useStore.setState({ scrollPosition: breakpoint });\r\n\r\n    // clear timeout if one currently exists\r\n    clearTimeout(timeoutRef.current);\r\n    // reset the rotation factor after travel is complete\r\n    timeoutRef.current = setTimeout(() => {\r\n      setJumpDirection(0);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <MarkerContainer\r\n      ismobile={ismobile}\r\n      onClick={handleClick}\r\n      size={size}\r\n      offset={offset}\r\n    >\r\n      {isStartEnd ? <Circle size={size} /> : <Square size={size} />}\r\n    </MarkerContainer>\r\n  );\r\n}\r\n\r\nconst TextContainer = styled(animated.div)`\r\n  position: absolute;\r\n  right: ${(props) =>\r\n    props.ismobile ? `calc(50% - ${-props.offset}px)` : `${props.size * 4}px`};\r\n  top: ${(props) =>\r\n    props.ismobile ? \"auto\" : `calc(50% - ${props.offset}px)`};\r\n  bottom: ${(props) => (props.ismobile ? `${props.size * 4}px` : \"auto\")};\r\n  transform: translate(\r\n      ${(props) =>\r\n        props.ismobile\r\n          ? `${props.size / 2.2}px, ${-props.size}px`\r\n          : `0px, ${-props.size / 1.7}px`}\r\n    )\r\n    translate(\r\n      ${(props) =>\r\n        props.ismobile ? `0px, var(--offset, 0px)` : `var(--offset, 0px), 0px`}\r\n    );\r\n  white-space: nowrap;\r\n  text-align: right;\r\n  font-size: ${(props) => props.size * (props.ismobile ? 0.8 : 0.9)}px;\r\n  writing-mode: ${(props) =>\r\n    props.ismobile ? \"vertical-lr\" : \"horizontal-lr\"};\r\n  text-orientation: ${(props) => (props.ismobile ? \"upright\" : \"horizontal\")};\r\n  user-select: none;\r\n`;\r\n\r\nfunction Track({\r\n  size,\r\n  offsetDistance,\r\n  numSections,\r\n  breakpoints,\r\n  textToggles,\r\n  ismobile\r\n}) {\r\n  const offsetFactors = [...Array(numSections)].map(\r\n    (_, index) => -(index - (numSections - 1) / 2)\r\n  );\r\n\r\n  const timeoutRef = useRef();\r\n  const [jumpDirection, setJumpDirection] = useState(0);\r\n\r\n  const sectionNames = [\r\n    \"\",\r\n    \"about me\",\r\n    \"commercial\",\r\n    \"portfolio\",\r\n    \"research\",\r\n    \"euphony\",\r\n    \"music\",\r\n    \"\"\r\n  ];\r\n  return (\r\n    <>\r\n      {offsetFactors.map((offsetFactor, index) => (\r\n        <Marker\r\n          key={index}\r\n          isStartEnd={index === 0 || index === offsetFactors.length - 1}\r\n          size={size}\r\n          offset={offsetFactor * offsetDistance}\r\n          breakpoint={breakpoints[index]}\r\n          setJumpDirection={setJumpDirection}\r\n          timeoutRef={timeoutRef}\r\n          ismobile={ismobile}\r\n        />\r\n      ))}\r\n      {sectionNames.map((name, index) => (\r\n        <TextContainer\r\n          key={index}\r\n          size={size}\r\n          offset={offsetFactors[index] * offsetDistance}\r\n          ismobile={ismobile}\r\n          style={{\r\n            opacity: textToggles[index].to({ output: [0, 1] }),\r\n            \"--offset\": textToggles[index]\r\n              .to({ output: [size * 2, 0] })\r\n              .to((value) => `${value}px`)\r\n          }}\r\n        >\r\n          {name}\r\n        </TextContainer>\r\n      ))}\r\n\r\n      <PositionMarker\r\n        size={size}\r\n        offsetDistance={offsetDistance}\r\n        numSections={numSections}\r\n        jumpDirection={jumpDirection}\r\n        ismobile={ismobile}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Track };\r\n","import { useState, useEffect } from \"react\";\r\nimport { animated } from \"@react-spring/web\";\r\nimport styled from \"styled-components\";\r\nimport { useStore } from \"../../store\";\r\nimport { useSpring, useSpringRef, useChain } from \"@react-spring/core\";\r\nimport { Track } from \"./Track\";\r\n\r\nconst Container = styled(animated.div)`\r\n  position: fixed;\r\n  right: ${(props) =>\r\n    props.ismobile ? `calc(50% - ${props.width / 2}px)` : \"0\"};\r\n  top: ${(props) =>\r\n    props.ismobile ? \"auto\" : `calc(50% - ${props.height / 2}px)`};\r\n  bottom: ${(props) => (props.ismobile ? \"0\" : \"auto\")};\r\n  height: ${(props) => props.height}px;\r\n  width: ${(props) => props.width}px;\r\n  z-index: 2;\r\n  transform-origin: ${(props) =>\r\n    props.ismobile ? \"center bottom\" : \"center right\"};\r\n  transform: scale(var(--scale, 1));\r\n`;\r\n\r\nconst Background = styled(animated.div)`\r\n  position: absolute;\r\n  right: ${(props) => (props.ismobile ? \"auto\" : 0)};\r\n  bottom: ${(props) => (props.ismobile ? 0 : \"auto\")};\r\n  height: ${(props) => (props.ismobile ? \"var(--size, 100%)\" : \"100%\")};\r\n  width: ${(props) => (props.ismobile ? \"100%\" : \"var(--size, 100%)\")};\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  backdrop-filter: blur(7px);\r\n`;\r\n\r\nfunction ScrollOverlay() {\r\n  const numSections = useStore((state) => state.numSections);\r\n  const breakpoints = useStore((state) => state.breakpoints);\r\n\r\n  const size = Math.ceil(window.innerHeight / (9 * numSections));\r\n  const offsetDistance = Math.ceil(size * 2.25);\r\n\r\n  const [ismobile, setismobile] = useState(window.innerWidth < window.innerHeight)\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setismobile(window.innerWidth < window.innerHeight);\r\n    });\r\n  }, []);\r\n\r\n  const height = ismobile ? size * 4 : numSections * offsetDistance + size;\r\n  const width = ismobile ? numSections * offsetDistance + size : size * 4;\r\n\r\n  const bgMaxSize = ismobile ? 400 : 275;\r\n\r\n  // state toggle used to interpolate values for animations\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  // set up spring toggles\r\n  const overlaySpringRef = useSpringRef();\r\n  const overlayToggle = useSpring({\r\n    ref: overlaySpringRef,\r\n    toggle: Number(toggle)\r\n  }).toggle;\r\n  const bgSpringRef = useSpringRef();\r\n  const bgToggle = useSpring({\r\n    ref: bgSpringRef,\r\n    toggle: Number(toggle)\r\n  }).toggle;\r\n  const textSpringRefs = [];\r\n  const textToggles = [];\r\n  for (let i = 0; i < numSections; i++) {\r\n    textSpringRefs[i] = useSpringRef();\r\n    textToggles[i] = useSpring({\r\n      ref: textSpringRefs[i],\r\n      toggle: Number(toggle)\r\n    }).toggle;\r\n  }\r\n\r\n  // set up chain to handle the timing of delays between animations\r\n  useChain(\r\n    [overlaySpringRef, bgSpringRef, ...textSpringRefs],\r\n    toggle\r\n      ? [0, 50, ...textSpringRefs.map((_, index) => 175 + index * 100)]\r\n      : [300, 450, ...textSpringRefs.map((_, index) => index * 50)],\r\n    1\r\n  );\r\n\r\n  return (\r\n    <Container\r\n      onMouseEnter={() => setToggle(true)}\r\n      onMouseLeave={() => setToggle(false)}\r\n      ismobile={ismobile ? 1 : 0}\r\n      width={width}\r\n      height={height}\r\n      style={{\r\n        \"--scale\": overlayToggle.to({ output: [1, 1.5] })\r\n      }}\r\n    >\r\n      <Background\r\n        ismobile={ismobile ? 1 : 0}\r\n        style={{\r\n          \"--size\": bgToggle\r\n            .to({ output: [100, bgMaxSize] })\r\n            .to((value) => `${value}%`),\r\n          opacity: bgToggle.to({ output: [0, 1] })\r\n        }}\r\n      />\r\n\r\n      <Track\r\n        size={size}\r\n        offsetDistance={offsetDistance}\r\n        numSections={numSections}\r\n        breakpoints={breakpoints}\r\n        textToggles={textToggles}\r\n        isMobile={ismobile}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { ScrollOverlay };\r\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { App } from \"./App\";\nimport { ScrollHandler } from \"./components/ScrollHandler\";\nimport { ScrollOverlay } from \"./components/scroll/ScrollOverlay\";\nimport styled from \"styled-components\";\nimport \"./styles.css\";\n\nconst Container = styled(\"div\")`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst LoadingContainer = styled(\"div\")`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n`\nconst routerBaseName = process.env.PUBLIC_URL;\n\nReactDOM.render(\n  <Container>\n    <Suspense fallback={<LoadingContainer children=\"loading...\" />}>\n      <App />\n    </Suspense>\n    <ScrollHandler />\n    <ScrollOverlay size={1} offsetDistance={2.25} />\n  </Container>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}